## ----------------------------- ##
## openvswitch 2.5.0 test suite. ##
## ----------------------------- ##

testsuite: command line was:
  $ ./tests/testsuite -C tests AUTOTEST_PATH=utilities:vswitchd:ovsdb:vtep:tests::ovn/controller-vtep:ovn/northd:ovn/utilities:ovn/controller

## --------- ##
## Platform. ##
## --------- ##

hostname = s1.ring.lewis-masters-pg0.apt.emulab.net
uname -m = x86_64
uname -r = 3.13.0-33-generic
uname -s = Linux
uname -v = #58-Ubuntu SMP Tue Jul 29 16:45:05 UTC 2014

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /users/lwsjoh00/openvswitch-2.5.0/utilities
PATH: /users/lwsjoh00/openvswitch-2.5.0/vswitchd
PATH: /users/lwsjoh00/openvswitch-2.5.0/ovsdb
PATH: /users/lwsjoh00/openvswitch-2.5.0/vtep
PATH: /users/lwsjoh00/openvswitch-2.5.0/tests
PATH: /users/lwsjoh00/openvswitch-2.5.0
PATH: /users/lwsjoh00/openvswitch-2.5.0/ovn/controller-vtep
PATH: /users/lwsjoh00/openvswitch-2.5.0/ovn/northd
PATH: /users/lwsjoh00/openvswitch-2.5.0/ovn/utilities
PATH: /users/lwsjoh00/openvswitch-2.5.0/ovn/controller
PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin

testsuite: atconfig:
| # Configurable variable values for building test suites.
| # Generated by ./config.status.
| # Copyright (C) 2012 Free Software Foundation, Inc.
| 
| # The test suite will define top_srcdir=/../.. etc.
| at_testdir='tests'
| abs_builddir='/users/lwsjoh00/openvswitch-2.5.0/tests'
| at_srcdir='.'
| abs_srcdir='/users/lwsjoh00/openvswitch-2.5.0/tests'
| at_top_srcdir='..'
| abs_top_srcdir='/users/lwsjoh00/openvswitch-2.5.0'
| at_top_build_prefix='../'
| abs_top_builddir='/users/lwsjoh00/openvswitch-2.5.0'
| 
| # Backward compatibility with Autotest <= 2.59b:
| at_top_builddir=$at_top_build_prefix
| 
| AUTOTEST_PATH='tests'
| 
| SHELL=${CONFIG_SHELL-'/bin/bash'}

testsuite: atlocal:
| # -*- shell-script -*-
| HAVE_OPENSSL='yes'
| HAVE_PYTHON='yes'
| EGREP='/bin/grep -E'
| PERL='/usr/bin/perl'
| 
| if test x"$PYTHON" = x; then
|     PYTHON='/usr/bin/python'
| fi
| 
| PYTHONPATH=$abs_top_srcdir/python:$abs_top_builddir/tests:$PYTHONPATH
| export PYTHONPATH
| 
| PYTHONIOENCODING=utf_8
| export PYTHONIOENCODING
| 
| # PYTHONDONTWRITEBYTECODE=yes keeps Python from creating .pyc and .pyo
| # files.  Creating .py[co] works OK for any given version of Open
| # vSwitch, but it causes trouble if you switch from a version with
| # foo/__init__.py into an (older) version with plain foo.py, since
| # foo/__init__.pyc will cause Python to ignore foo.py.
| PYTHONDONTWRITEBYTECODE=yes
| export PYTHONDONTWRITEBYTECODE
| 
| # Test whether the current working directory name is all ASCII
| # characters.  Some Python code doesn't tolerate non-ASCII characters
| # in filenames very well, so if the current working directory is
| # non-ASCII then we skip the tests that run those programs.
| #
| # This would be just papering over a real problem, except that the
| # tests that we skip are launched from initscripts and thus normally
| # run in system directories with ASCII names.  (This problem only came
| # up at all because the Debian autobuilders do build in a top-level
| # directory named /«BUILDDIR».)
| case `pwd | tr -d ' -~'` in
|     '') non_ascii_cwd=false ;;
|     *) non_ascii_cwd=true
| esac
| 
| # Enable malloc debugging features.
| case `uname` in
| Linux)
|     MALLOC_PERTURB_=165; export MALLOC_PERTURB_
| 
|     # Before glibc 2.11, the feature enabled by MALLOC_CHECK_ was not
|     # thread-safe.  See https://bugzilla.redhat.com/show_bug.cgi?id=585674 and
|     # in particular the patch attached there, which was applied to glibc CVS as
|     # "Restore locking in free_check." between 1.11 and 1.11.1.
|     vswitchd=$abs_top_builddir/vswitchd/ovs-vswitchd
|     glibc=`ldd $vswitchd | sed -n 's/^	libc\.[^ ]* => \([^ ]*\) .*/\1/p'`
|     glibc_version=`$glibc | sed -n '1s/.*version \([0-9]\{1,\}\.[0-9]\{1,\}\).*/\1/p'`
|     case $glibc_version in
|         2.[0-9] | 2.1[01]) mcheck=disabled ;;
|         *) mcheck=enabled ;;
|     esac
|     if test $mcheck = enabled; then
|         MALLOC_CHECK_=2; export MALLOC_CHECK_
|     else
|         echo >&2 "glibc $glibc_version detected, disabling memory checking"
|     fi
|     ;;
| FreeBSD)
|     case `uname -r` in
|     [789].*)
|         MALLOC_CONF=AJ
|         ;;
|     *)
|         MALLOC_CONF=abort:true,junk:true,redzone:true
|         ;;
|     esac
|     export MALLOC_CONF
| esac
| 
| # The name of loopback interface 
| case `uname` in
| Linux)
|     LOOPBACK_INTERFACE=lo
|     ;;
| FreeBSD|NetBSD)
|     LOOPBACK_INTERFACE=lo0
|     ;;
| esac
| 
| # Check for platform.
| case `uname` in
| MINGW*)
|     IS_WIN32="yes"
|     IS_BSD="no"
|     ;;
| FreeBSD|NetBSD)
|     IS_WIN32="no"
|     IS_BSD="yes"
|     ;;
| *)
|     IS_WIN32="no"
|     IS_BSD="no"
|     ;;
| esac
| 
| # Check whether to run IPv6 tests.
| if perl -e 'use Socket; socket(FH, PF_INET6, SOCK_STREAM, 0) || exit 1;'; then
|     HAVE_IPV6=yes
| else
|     HAVE_IPV6=no
| fi
| 
| # XXX: Disable Python related tests on Windows because Open vSwitch code
| # written in Python has not been ported to the Windows platform. We will
| # need to remove the next block after porting is complete.
| if test "$IS_WIN32" = "yes"; then
|     HAVE_PYTHON="no"
| fi
| 
| if test "$HAVE_PYTHON" = "yes" \
|    && test "x`$PYTHON $abs_top_srcdir/tests/test-l7.py --help | grep 'ftp'`" != x; then
|     HAVE_PYFTPDLIB="yes"
| else
|     HAVE_PYFTPDLIB="no"
| fi

## ---------------- ##
## Tested programs. ##
## ---------------- ##

./testsuite.at:1: /users/lwsjoh00/openvswitch-2.5.0/vswitchd/ovs-vswitchd --version
ovs-vswitchd (Open vSwitch) 2.5.0
Compiled Oct 24 2016 10:28:52

./testsuite.at:1: /users/lwsjoh00/openvswitch-2.5.0/utilities/ovs-vsctl --version
ovs-vsctl (Open vSwitch) 2.5.0
Compiled Oct 24 2016 10:28:26
DB Schema 7.12.1

./testsuite.at:1: /usr/bin/perl --version

This is perl 5, version 18, subversion 2 (v5.18.2) built for x86_64-linux-gnu-thread-multi
(with 41 registered patches, see perl -V for more detail)

Copyright 1987-2013, Larry Wall

Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl 5 source kit.

Complete documentation for Perl, including FAQ lists, should be found on
this system using "man perl" or "perldoc perl".  If you have access to the
Internet, point your browser at http://www.perl.org/, the Perl Home Page.


## ------------------ ##
## Running the tests. ##
## ------------------ ##
testsuite: starting at: Mon Oct 24 10:29:00 MDT 2016
1. appctl-bashcomp - basic verification (completion.at:21): ok     (0m0.446s 0m0.897s)
2. appctl-bashcomp - complex completion check 1 (completion.at:88): ok     (0m0.220s 0m0.425s)
3. appctl-bashcomp - complex completion check 2 (completion.at:142): ok     (0m0.123s 0m0.240s)
4. appctl-bashcomp - complex completion check 3 (completion.at:176): ok     (0m0.442s 0m0.869s)
5. appctl-bashcomp - complex completion check 4 (completion.at:263): ok     (0m0.112s 0m0.222s)
6. appctl-bashcomp - negative test (completion.at:289): ok     (0m0.341s 0m0.669s)
7. vsctl-bashcomp - basic verification (completion.at:343): ok     (0m1.096s 0m2.778s)
8. vsctl-bashcomp - argument completion (completion.at:425): ok     (0m3.935s 0m10.307s)
9. vsctl-bashcomp - negative test (completion.at:752): ok     (0m0.421s 0m1.023s)
10. bfd - basic config on different bridges (bfd.at:45): ok     (0m0.166s 0m0.312s)
11. bfd - Verify tunnel down detection (bfd.at:87): ok     (0m0.233s 0m0.480s)
12. bfd - concatenated path down (bfd.at:168): ok     (0m0.139s 0m0.246s)
13. bfd - Edit the Min Tx/Rx values (bfd.at:195): ok     (0m0.137s 0m0.251s)
14. bfd - check_tnl_key (bfd.at:226): ok     (0m0.095s 0m0.177s)
15. bfd - bfd decay (bfd.at:261): ok     (0m1.507s 0m3.464s)
16. bfd - bfd forwarding_if_rx - bfd on one side (bfd.at:408): ok     (0m0.282s 0m0.622s)
17. bfd - bfd forwarding_if_rx - bfd on both sides (bfd.at:453): ok     (0m0.167s 0m0.354s)
18. bfd - bfd forwarding_if_rx - with bfd decay (bfd.at:519): ok     (0m0.456s 0m0.986s)
19. bfd - bfd forwarding_if_rx - demand_rx_bfd (bfd.at:607): ok     (0m1.305s 0m2.879s)
20. bfd - flap_count (bfd.at:678): ok     (0m0.996s 0m2.076s)
21. cfm - check update ovsdb 1 (cfm.at:49): ok     (0m0.290s 0m0.501s)
22. cfm - check update ovsdb 2 (cfm.at:78): ok     (0m0.331s 0m0.550s)
23. cfm - demand mode (cfm.at:112): ok     (0m2.817s 0m6.643s)
24. cfm - demand_rx_ccm (cfm.at:154): ok     (0m4.394s 0m9.732s)
25. cfm - flap_count (cfm.at:216): ok     (0m0.109s 0m0.198s)
26. cfm - fault_override (cfm.at:249): ok     (0m0.164s 0m0.324s)
27. lacp - config (lacp.at:13): ok     (0m0.063s 0m0.119s)
28. lacp - multi port config (lacp.at:53): ok     (0m0.062s 0m0.117s)
29. lacp - negotiation (lacp.at:139): ok     (0m0.212s 0m0.417s)
30. test flow extractor (library.at:3): ok     (0m0.063s 0m0.031s)
31. test TCP/IP checksumming (library.at:9): ok     (0m0.007s 0m0.014s)
32. test hash functions (library.at:14): ok     (0m0.223s 0m0.009s)
33. test hash map (library.at:18): ok     (0m0.046s 0m0.006s)
34. test hash index (library.at:24): ok     (0m0.103s 0m0.006s)
35. test cuckoo hash (library.at:30): ok     (0m10.096s 0m0.017s)
36. test atomic operations (library.at:36): ok     (0m3.607s 0m1.501s)
37. test linked lists (library.at:40): ok     (0m0.008s 0m0.013s)
38. test packet library (library.at:45): ok     (0m0.004s 0m0.009s)
39. test SHA-1 (library.at:49): ok     (0m0.096s 0m0.006s)
40. test type properties (library.at:54): ok     (0m0.001s 0m0.003s)
41. test strtok_r bug fix (library.at:58): ok     (0m0.002s 0m0.005s)
42. test byte order conversion (library.at:63): ok     (0m0.002s 0m0.004s)
43. test random number generator (library.at:68): ok     (0m0.004s 0m0.005s)
44. ctz() function (library.at:120): ok     (0m0.002s 0m0.004s)
45. clz() function (library.at:120): ok     (0m0.002s 0m0.004s)
46. round_up_pow2() function (library.at:120): ok     (0m0.002s 0m0.004s)
47. round_down_pow2() function (library.at:120): ok     (0m0.002s 0m0.004s)
48. count_1bits() function (library.at:120): ok     (0m0.003s 0m0.004s)
49. log_2_floor() function (library.at:120): ok     (0m0.002s 0m0.004s)
50. bitwise_copy() function (library.at:120): ok     (0m0.007s 0m0.004s)
51. bitwise_zero() function (library.at:120): ok     (0m0.002s 0m0.004s)
52. bitwise_one() function (library.at:120): ok     (0m0.002s 0m0.004s)
53. bitwise_is_all_zeros() function (library.at:120): ok     (0m0.101s 0m0.004s)
54. ovs_scan() function (library.at:120): ok     (0m0.002s 0m0.004s)
55. test unix socket, short pathname - C (library.at:138): ok     (0m0.002s 0m0.004s)
56. test unix socket, long pathname - C (library.at:148): ok     (0m0.003s 0m0.005s)
57. test unix socket, short pathname - Python (library.at:157): ok     (0m0.030s 0m0.016s)
58. test unix socket, long pathname - Python (library.at:167): ok     (0m0.030s 0m0.016s)
59. ovs_assert (library.at:176): ok     (0m0.006s 0m0.014s)
60. snprintf (library.at:199): ok     (0m0.002s 0m0.004s)
61. test bitmap functions (library.at:203): ok     (0m0.003s 0m0.005s)
62. use of public headers (library.at:208): ok     (0m0.002s 0m0.004s)
63. test ofpbuf module (library.at:212): ok     (0m0.002s 0m0.004s)
64. heap library -- insert delete same order (heap.at:8): ok     (0m0.030s 0m0.004s)
65. heap library -- insert delete reverse order (heap.at:9): ok     (0m0.028s 0m0.004s)
66. heap library -- insert delete every order (heap.at:10): ok     (0m0.046s 0m0.004s)
67. heap library -- insert delete same order with dups (heap.at:11): ok     (0m0.241s 0m0.004s)
68. heap library -- raw insert (heap.at:12): ok     (0m0.018s 0m0.004s)
69. heap library -- raw delete (heap.at:13): ok     (0m0.004s 0m0.004s)
70. hrw bundle link selection (bundle.at:10): ok     (0m0.209s 0m0.026s)
71. active_backup bundle link selection (bundle.at:80): ok     (0m0.070s 0m0.026s)
72. hrw bundle single link selection (bundle.at:151): ok     (0m0.027s 0m0.024s)
73. hrw bundle no link selection (bundle.at:159): ok     (0m0.022s 0m0.024s)
74. bundle action missing argument (bundle.at:166): ok     (0m0.003s 0m0.006s)
75. bundle action bad fields (bundle.at:172): ok     (0m0.003s 0m0.006s)
76. bundle action bad algorithm (bundle.at:178): ok     (0m0.003s 0m0.005s)
77. bundle action bad slave type (bundle.at:184): ok     (0m0.003s 0m0.006s)
78. bundle action bad slave delimiter (bundle.at:190): ok     (0m0.003s 0m0.005s)
79. flow classifier - empty (classifier.at:2): ok     (0m0.002s 0m0.004s)
80. flow classifier - destroy null (classifier.at:2): ok     (0m0.002s 0m0.004s)
81. flow classifier - single rule (classifier.at:2): ok     (0m2.736s 0m0.036s)
82. flow classifier - rule replacement (classifier.at:2): ok     (0m3.498s 0m0.036s)
83. flow classifier - many rules in one list (classifier.at:2): ok     (0m0.326s 0m0.006s)
84. flow classifier - versioned many rules in one list (classifier.at:2): ok     (0m0.346s 0m0.005s)
85. flow classifier - many rules in one table (classifier.at:2): ok     (0m2.048s 0m0.007s)
86. flow classifier - versioned many rules in one table (classifier.at:2): ok     (0m2.189s 0m0.008s)
87. flow classifier - many rules in two tables (classifier.at:2): ok     (0m7.291s 0m0.014s)
88. flow classifier - versioned many rules in two tables (classifier.at:2): ok     (0m11.576s 0m0.020s)
89. flow classifier - many rules in five tables (classifier.at:2): ok     (0m7.352s 0m0.013s)
90. flow classifier - versioned many rules in five tables (classifier.at:2): ok     (0m11.810s 0m0.019s)
91. miniflow - miniflow (classifier.at:21): ok     (0m0.063s 0m0.004s)
92. miniflow - minimask_has_extra (classifier.at:21): ok     (0m0.066s 0m0.004s)
93. miniflow - minimask_combine (classifier.at:21): ok     (0m0.142s 0m0.004s)
94. flow classifier - lookup segmentation (classifier.at:31): ok     (0m0.049s 0m0.093s)
95. flow classifier - prefix lookup (classifier.at:69): ok     (0m0.073s 0m0.133s)
96. single conjunctive match (classifier.at:134): ok     (0m0.286s 0m0.619s)
97. multiple conjunctive match (classifier.at:171): ok     (0m1.903s 0m4.193s)
98. conjunctive match priority fallback (classifier.at:247): ok     (0m0.124s 0m0.258s)
99. conjunctive match and other actions (classifier.at:293): ok     (0m0.034s 0m0.066s)
100. check struct tail padding (check-structs.at:11): ok     (0m0.016s 0m0.013s)
101. check struct internal alignment (check-structs.at:21): ok     (0m0.015s 0m0.013s)
102. check struct declared size (check-structs.at:32): ok     (0m0.016s 0m0.013s)
103. check wrong struct's declared size (check-structs.at:44): ok     (0m0.016s 0m0.013s)
104. daemon (daemon.at:3): ok     (0m0.016s 0m0.030s)
105. daemon --monitor (daemon.at:22): ok     (0m0.038s 0m0.084s)
106. daemon --detach (daemon.at:71): ok     (0m0.016s 0m0.031s)
107. daemon --detach --monitor (daemon.at:94): ok     (0m0.051s 0m0.117s)
108. daemon --detach startup errors (daemon.at:144): ok     (0m0.018s 0m0.026s)
109. daemon --detach --monitor startup errors (daemon.at:153): ok     (0m0.018s 0m0.027s)
110. daemon --service (daemon.at:163): skipped (daemon.at:165)
111. daemon - Python (daemon-py.at:3): ok     (0m0.008s 0m0.021s)
112. daemon --monitor - Python (daemon-py.at:21): ok     (0m0.026s 0m0.066s)
113. daemon --monitor restart exit code - Python (daemon-py.at:64): ok     (0m0.028s 0m0.071s)
114. daemon --detach - Python (daemon-py.at:107): ok     (0m0.048s 0m0.040s)
115. daemon --detach --monitor - Python (daemon-py.at:123): ok     (0m0.079s 0m0.120s)
116. daemon --detach startup errors - Python (daemon-py.at:172): ok     (0m0.047s 0m0.035s)
117. daemon --detach --monitor startup errors - Python (daemon-py.at:181): ok     (0m0.051s 0m0.042s)
118. daemon --detach closes standard fds - Python (daemon-py.at:190): ok     (0m0.046s 0m0.041s)
119. daemon --detach --monitor closes standard fds (daemon-py.at:210): ok     (0m0.056s 0m0.052s)
120. OpenFlow 1.0 action translation (ofp-actions.at:3): ok     (0m0.006s 0m0.011s)
121. OpenFlow 1.0 "instruction" translations (ofp-actions.at:202): ok     (0m0.006s 0m0.012s)
122. OpenFlow 1.1 action translation (ofp-actions.at:232): ok     (0m0.006s 0m0.011s)
123. OpenFlow 1.1 instruction translation (ofp-actions.at:369): ok     (0m0.006s 0m0.011s)
124. OpenFlow 1.2 action translation (ofp-actions.at:580): ok     (0m0.006s 0m0.011s)
125. OpenFlow 1.3 action translation (ofp-actions.at:606): ok     (0m0.006s 0m0.011s)
126. OpenFlow 1.5 action translation (ofp-actions.at:634): ok     (0m0.006s 0m0.011s)
127. ofp-actions - inconsistent MPLS actions (ofp-actions.at:658): ok     (0m0.031s 0m0.059s)
128. reg_load <-> set_field translation corner case (ofp-actions.at:670): ok     (0m0.033s 0m0.063s)
129. empty (ofp-print.at:3): ok     (0m0.003s 0m0.006s)
130. too short (ofp-print.at:9): ok     (0m0.003s 0m0.006s)
131. wrong OpenFlow version (ofp-print.at:17): ok     (0m0.004s 0m0.007s)
132. truncated message (ofp-print.at:27): ok     (0m0.003s 0m0.006s)
133. message only uses part of buffer (ofp-print.at:35): ok     (0m0.003s 0m0.006s)
134. OFPT_HELLO - ordinary (ofp-print.at:44): ok     (0m0.003s 0m0.006s)
135. OFPT_HELLO with extra data (ofp-print.at:52): ok     (0m0.003s 0m0.006s)
136. OFPT_HELLO with version bitmap (ofp-print.at:64): ok     (0m0.003s 0m0.006s)
137. OFPT_HELLO with version bitmap and extra data (ofp-print.at:73): ok     (0m0.003s 0m0.006s)
138. OFPT_HELLO with higher than supported version (ofp-print.at:87): ok     (0m0.007s 0m0.015s)
139. OFPT_HELLO with contradictory version bitmaps (ofp-print.at:106): ok     (0m0.015s 0m0.029s)
140. OFPT_ECHO_REQUEST, empty payload (ofp-print.at:148): ok     (0m0.003s 0m0.006s)
141. OFPT_ECHO_REQUEST, 5-byte payload (ofp-print.at:155): ok     (0m0.003s 0m0.006s)
142. OFPT_ECHO_REPLY, empty payload (ofp-print.at:163): ok     (0m0.003s 0m0.006s)
143. OFPT_ECHO_REPLY, 5-byte payload (ofp-print.at:170): ok     (0m0.003s 0m0.006s)
144. OFPT_FEATURES_REQUEST (ofp-print.at:178): ok     (0m0.003s 0m0.006s)
145. OFPT_FEATURES_REPLY - OF1.0 (ofp-print.at:185): ok     (0m0.003s 0m0.006s)
146. OFPT_FEATURES_REPLY cut off mid-port - OF1.0 (ofp-print.at:235): ok     (0m0.005s 0m0.011s)
147. OFPT_FEATURES_REPLY - OF1.1 (ofp-print.at:274): ok     (0m0.003s 0m0.006s)
148. OFPT_FEATURES_REPLY cut off mid-port - OF1.1 (ofp-print.at:305): ok     (0m0.005s 0m0.011s)
149. OFPT_FEATURES_REPLY - OF1.2 (ofp-print.at:334): ok     (0m0.003s 0m0.006s)
150. OFPT_FEATURES_REPLY cut off mid-port - OF1.2 (ofp-print.at:365): ok     (0m0.004s 0m0.009s)
151. OFPT_FEATURES_REPLY - OF1.3 (ofp-print.at:394): ok     (0m0.003s 0m0.006s)
152. OFPT_FEATURES_REPLY - with auxiliary_id - OF1.3 (ofp-print.at:406): ok     (0m0.003s 0m0.006s)
153. OFPT_GET_CONFIG_REQUEST (ofp-print.at:418): ok     (0m0.003s 0m0.007s)
154. OFPT_GET_CONFIG_REPLY, most common form (ofp-print.at:425): ok     (0m0.003s 0m0.006s)
155. OFPT_GET_CONFIG_REPLY, frags and miss_send_len (ofp-print.at:433): ok     (0m0.003s 0m0.006s)
156. OFPT_PACKET_IN - OF1.0 (ofp-print.at:440): ok     (0m0.003s 0m0.006s)
157. OFPT_PACKET_IN - OF1.0, with hex output of packet data (ofp-print.at:454): ok     (0m0.007s 0m0.014s)
158. OFPT_PACKET_IN - OF1.1 (ofp-print.at:472): ok     (0m0.007s 0m0.014s)
159. OFPT_PACKET_IN - OF1.2 (ofp-print.at:487): ok     (0m0.007s 0m0.014s)
160. OFPT_PACKET_IN - OF1.2, with hex output of packet data (ofp-print.at:501): ok     (0m0.007s 0m0.014s)
161. OFPT_PACKET_IN - OF1.3 (ofp-print.at:518): ok     (0m0.003s 0m0.006s)
162. OFPT_PACKET_IN - OF1.4 (ofp-print.at:533): ok     (0m0.003s 0m0.006s)
163. OFPT_PACKET_IN - OF1.5 (ofp-print.at:548): ok     (0m0.003s 0m0.006s)
164. OFPT_PACKET_IN - OF1.3, with hex output of packet data (ofp-print.at:563): ok     (0m0.003s 0m0.006s)
165. OFPT_FLOW_REMOVED - OF1.0 (ofp-print.at:581): ok     (0m0.003s 0m0.006s)
166. OFPT_FLOW_REMOVED - OF1.2 (ofp-print.at:595): ok     (0m0.003s 0m0.006s)
167. OFPT_FLOW_REMOVED - OF1.3 (ofp-print.at:606): ok     (0m0.003s 0m0.006s)
168. OFPT_PORT_STATUS - OF1.0 (ofp-print.at:617): ok     (0m0.003s 0m0.006s)
169. OFPT_PORT_STATUS - OF1.1 (ofp-print.at:635): ok     (0m0.003s 0m0.006s)
170. OFPT_PORT_STATUS - OF1.4 (ofp-print.at:654): ok     (0m0.003s 0m0.006s)
171. OFPT_PACKET_OUT - OF1.0 (ofp-print.at:674): ok     (0m0.003s 0m0.006s)
172. OFPT_PACKET_OUT - OF1.0, with packet (ofp-print.at:688): ok     (0m0.003s 0m0.006s)
173. OFPT_PACKET_OUT - OF1.0, with hex output of packet data (ofp-print.at:703): ok     (0m0.003s 0m0.006s)
174. OFPT_PACKET_OUT - OF1.1 (ofp-print.at:722): ok     (0m0.003s 0m0.006s)
175. OFPT_PACKET_OUT - OF1.1, with packet (ofp-print.at:733): ok     (0m0.003s 0m0.006s)
176. OFPT_FLOW_MOD - OF1.0 - low verbosity (ofp-print.at:750): ok     (0m0.004s 0m0.008s)
177. OFPT_FLOW_MOD - OF1.1 - low verbosity (ofp-print.at:768): ok     (0m0.003s 0m0.006s)
178. OFPT_FLOW_MOD - OF1.2 - low verbosity (ofp-print.at:788): ok     (0m0.003s 0m0.006s)
179. OFPT_FLOW_MOD - OF1.0 - high verbosity (ofp-print.at:808): ok     (0m0.004s 0m0.008s)
180. OFPT_FLOW_MOD - OF1.2 - low verbosity (ofp-print.at:826): ok     (0m0.003s 0m0.006s)
181. OFPT_FLOW_MOD - OF1.3 - flags - low verbosity (ofp-print.at:845): ok     (0m0.003s 0m0.006s)
182. OFPT_FLOW_MOD - OF1.2 - set-field ip_src (ofp-print.at:863): ok     (0m0.003s 0m0.006s)
183. OFPT_FLOW_MOD - OF1.2 - set-field ip_dst (ofp-print.at:878): ok     (0m0.003s 0m0.006s)
184. OFPT_FLOW_MOD - OF1.2 - set-field sctp_src (ofp-print.at:893): ok     (0m0.003s 0m0.006s)
185. OFPT_FLOW_MOD - OF1.2 - set-field sctp_dst (ofp-print.at:908): ok     (0m0.003s 0m0.006s)
186. OFPT_FLOW_MOD - OF1.2 - experimenter OXM (ofp-print.at:923): ok     (0m0.003s 0m0.006s)
187. OFPT_FLOW_MOD - OF1.2 - set-field nd_target, nd_sll (ofp-print.at:937): ok     (0m0.003s 0m0.006s)
188. OFPT_FLOW_MOD - OF1.3 - meter (ofp-print.at:955): ok     (0m0.003s 0m0.006s)
189. OFPT_FLOW reply - OF1.2 - set-field ip_src (ofp-print.at:966): ok     (0m0.003s 0m0.006s)
190. OFPT_FLOW reply - OF1.2 - set-field ip_dst (ofp-print.at:983): ok     (0m0.003s 0m0.006s)
191. OFPT_FLOW reply - OF1.2 - set-field sctp_src (ofp-print.at:1000): ok     (0m0.003s 0m0.006s)
192. OFPT_FLOW reply - OF1.2 - set-field sctp_dst (ofp-print.at:1017): ok     (0m0.003s 0m0.006s)
193. OFPT_PORT_MOD - OF1.0 (ofp-print.at:1034): ok     (0m0.003s 0m0.006s)
194. OFPT_PORT_MOD - OF1.1 (ofp-print.at:1047): ok     (0m0.003s 0m0.006s)
195. OFPT_PORT_MOD - OF1.2 (ofp-print.at:1061): ok     (0m0.003s 0m0.006s)
196. OFPT_PORT_MOD - OF1.3 (ofp-print.at:1075): ok     (0m0.003s 0m0.006s)
197. OFPT_PORT_MOD - OF1.4 (ofp-print.at:1089): ok     (0m0.003s 0m0.006s)
198. OFPT_TABLE_MOD - OF1.1 (ofp-print.at:1103): ok     (0m0.003s 0m0.006s)
199. OFPT_TABLE_MOD - OF1.2 (ofp-print.at:1112): ok     (0m0.003s 0m0.007s)
200. OFPT_TABLE_MOD - OF1.3 (ofp-print.at:1121): ok     (0m0.003s 0m0.006s)
201. OFPT_TABLE_MOD - OF1.4 (ofp-print.at:1130): ok     (0m0.003s 0m0.006s)
202. OFPST_DESC request (ofp-print.at:1139): ok     (0m0.003s 0m0.006s)
203. OFPST_DESC reply (ofp-print.at:1146): ok     (0m0.003s 0m0.006s)
204. OFPST_FLOW request - OF1.0 (ofp-print.at:1226): ok     (0m0.003s 0m0.006s)
205. OFPST_FLOW request - OF1.2 (ofp-print.at:1238): ok     (0m0.003s 0m0.006s)
206. OFPST_FLOW request - OF1.3 (ofp-print.at:1250): ok     (0m0.003s 0m0.006s)
207. OFPST_FLOW reply - OF1.0 (ofp-print.at:1262): ok     (0m0.003s 0m0.006s)
208. OFPST_FLOW reply - OF1.2 (ofp-print.at:1306): ok     (0m0.003s 0m0.006s)
209. OFPST_AGGREGATE request - OF1.0 (ofp-print.at:1341): ok     (0m0.003s 0m0.006s)
210. OFPST_AGGREGATE request - OF1.2 (ofp-print.at:1353): ok     (0m0.003s 0m0.006s)
211. OFPST_AGGREGATE request - OF1.3 (ofp-print.at:1365): ok     (0m0.003s 0m0.006s)
212. OFPST_AGGREGATE reply - OF1.0 (ofp-print.at:1377): ok     (0m0.003s 0m0.006s)
213. OFPST_AGGREGATE reply - OF1.2 (ofp-print.at:1388): ok     (0m0.003s 0m0.006s)
214. OFPST_AGGREGATE reply - OF1.3 (ofp-print.at:1399): ok     (0m0.003s 0m0.006s)
215. OFPST_TABLE request - OF1.0 (ofp-print.at:1410): ok     (0m0.003s 0m0.006s)
216. OFPST_TABLE request - OF1.1 (ofp-print.at:1417): ok     (0m0.003s 0m0.006s)
217. OFPST_TABLE request - OF1.2 (ofp-print.at:1424): ok     (0m0.003s 0m0.006s)
218. OFPST_TABLE request - OF1.3 (ofp-print.at:1431): ok     (0m0.003s 0m0.006s)
219. OFPST_TABLE reply - OF1.0 (ofp-print.at:1438): ok     (0m0.003s 0m0.006s)
220. OFPST_TABLE reply - OF1.2 (ofp-print.at:1467): ok     (0m1.145s 0m3.424s)
221. OFPST_TABLE reply - OF1.3 (ofp-print.at:1558): ok     (0m0.003s 0m0.006s)
222. OFPST_PORT request - 1.0 (ofp-print.at:1575): ok     (0m0.003s 0m0.006s)
223. OFPST_PORT request - 1.1 (ofp-print.at:1585): ok     (0m0.003s 0m0.006s)
224. OFPST_PORT request - 1.2 (ofp-print.at:1595): ok     (0m0.003s 0m0.006s)
225. OFPST_PORT request - 1.3 (ofp-print.at:1605): ok     (0m0.003s 0m0.006s)
226. OFPST_PORT reply - OF1.0 (ofp-print.at:1615): ok     (0m0.003s 0m0.006s)
227. OFPST_PORT reply - OF1.2 (ofp-print.at:1658): ok     (0m0.003s 0m0.006s)
228. OFPST_PORT reply - OF1.3 (ofp-print.at:1693): ok     (0m0.003s 0m0.006s)
229. OFPST_PORT reply - OF1.4 (ofp-print.at:1732): ok     (0m0.003s 0m0.006s)
230. OFPST_QUEUE request - OF1.0 (ofp-print.at:1752): ok     (0m0.003s 0m0.006s)
231. OFPST_QUEUE request - OF1.1 (ofp-print.at:1762): ok     (0m0.003s 0m0.006s)
232. OFPST_QUEUE request - OF1.2 (ofp-print.at:1772): ok     (0m0.003s 0m0.006s)
233. OFPST_QUEUE request - OF1.3 (ofp-print.at:1782): ok     (0m0.003s 0m0.006s)
234. OFPST_QUEUE reply - OF1.0 (ofp-print.at:1792): ok     (0m0.003s 0m0.006s)
235. OFPST_QUEUE reply - OF1.1 (ofp-print.at:1819): ok     (0m0.003s 0m0.006s)
236. OFPST_QUEUE reply - OF1.2 (ofp-print.at:1846): ok     (0m0.003s 0m0.006s)
237. OFPST_QUEUE reply - OF1.3 (ofp-print.at:1873): ok     (0m0.003s 0m0.006s)
238. OFPST_QUEUE reply - OF1.4 (ofp-print.at:1906): ok     (0m0.003s 0m0.006s)
239. OFPST_GROUP request (ofp-print.at:1940): ok     (0m0.003s 0m0.006s)
240. OFPST_GROUP reply - OF1.1 (ofp-print.at:1949): ok     (0m0.003s 0m0.006s)
241. OFPST_GROUP reply - OF1.3 (ofp-print.at:1969): ok     (0m0.003s 0m0.006s)
242. OFPST_GROUP_DESC request - OF1.1 (ofp-print.at:1991): ok     (0m0.003s 0m0.006s)
243. OFPST_GROUP_DESC request - OF1.5 (ofp-print.at:1999): ok     (0m0.003s 0m0.006s)
244. OFPST_GROUP_DESC reply - OF1.1 (ofp-print.at:2008): ok     (0m0.003s 0m0.006s)
245. OFPST_GROUP_DESC reply - OF1.5 (ofp-print.at:2025): ok     (0m0.003s 0m0.006s)
246. OFPST_GROUP_FEATURES request (ofp-print.at:2050): ok     (0m0.003s 0m0.006s)
247. OFPST_GROUP_FEATURES reply (ofp-print.at:2058): ok     (0m0.003s 0m0.006s)
248. OFPST_PORT_DESC request - OF1.0 (ofp-print.at:2085): ok     (0m0.003s 0m0.006s)
249. OFPST_PORT_DESC request - OF1.5 (ofp-print.at:2092): ok     (0m0.003s 0m0.006s)
250. OFPST_PORT_DESC reply - OF1.0 (ofp-print.at:2101): ok     (0m0.003s 0m0.006s)
251. OFPST_PORT_DESC reply - OF1.4 (ofp-print.at:2120): ok     (0m0.003s 0m0.006s)
252. OFPT_METER_MOD request - OF1.3 (ofp-print.at:2141): ok     (0m0.003s 0m0.006s)
253. OFPT_METER_MOD request - bad band - OF1.3 (ofp-print.at:2152): ok     (0m0.003s 0m0.006s)
254. OFPT_METER_MOD request - bad command - OF1.3 (ofp-print.at:2162): ok     (0m0.003s 0m0.006s)
255. OFPT_METER_MOD request - bad flags - OF1.3 (ofp-print.at:2171): ok     (0m0.003s 0m0.006s)
256. OFPST_METER request - OF1.3 (ofp-print.at:2181): ok     (0m0.003s 0m0.006s)
257. OFPST_METER_CONFIG request - OF1.3 (ofp-print.at:2188): ok     (0m0.003s 0m0.006s)
258. OFPST_METER_FEATURES request - OF1.3 (ofp-print.at:2195): ok     (0m0.003s 0m0.006s)
259. OFPST_METER_FEATURES reply - OF1.3 (ofp-print.at:2202): ok     (0m0.003s 0m0.006s)
260. OFPST_METER_CONFIG reply - OF1.3 (ofp-print.at:2215): ok     (0m0.003s 0m0.006s)
261. OFPST_METER reply - OF1.3 (ofp-print.at:2235): ok     (0m0.003s 0m0.006s)
262. OFPST_TABLE_FEATURES request - OF1.3 (ofp-print.at:2259): ok     (0m0.003s 0m0.006s)
263. OFPT_BARRIER_REQUEST - OF1.0 (ofp-print.at:2478): ok     (0m0.003s 0m0.006s)
264. OFPT_BARRIER_REQUEST - OF1.1 (ofp-print.at:2485): ok     (0m0.003s 0m0.006s)
265. OFPT_BARRIER_REQUEST - OF1.2 (ofp-print.at:2492): ok     (0m0.003s 0m0.007s)
266. OFPT_BARRIER_REQUEST - OF1.3 (ofp-print.at:2499): ok     (0m0.003s 0m0.006s)
267. OFPT_BARRIER_REPLY - OF1.0 (ofp-print.at:2506): ok     (0m0.003s 0m0.006s)
268. OFPT_BARRIER_REPLY - OF1.1 (ofp-print.at:2513): ok     (0m0.003s 0m0.006s)
269. OFPT_BARRIER_REPLY - OF1.2 (ofp-print.at:2520): ok     (0m0.007s 0m0.014s)
270. OFPT_BARRIER_REPLY - OF1.3 (ofp-print.at:2527): ok     (0m0.007s 0m0.014s)
271. OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.0 (ofp-print.at:2534): ok     (0m0.007s 0m0.014s)
272. OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.2 (ofp-print.at:2541): ok     (0m0.007s 0m0.014s)
273. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.0 (ofp-print.at:2549): ok     (0m0.003s 0m0.006s)
274. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.2 (ofp-print.at:2564): ok     (0m0.003s 0m0.006s)
275. OFPT_SET_ASYNC - OF1.3 (ofp-print.at:2579): ok     (0m0.003s 0m0.006s)
276. OFPT_ROLE_REQUEST - OF1.2 (ofp-print.at:2598): ok     (0m0.003s 0m0.006s)
277. OFPT_ROLE_REQUEST - nochange - OF1.2 (ofp-print.at:2608): ok     (0m0.003s 0m0.006s)
278. NXT_ROLE_REQUEST (ofp-print.at:2618): ok     (0m0.003s 0m0.006s)
279. OFPT_ROLE_REPLY - OF1.2 (ofp-print.at:2628): ok     (0m0.003s 0m0.006s)
280. NXT_ROLE_REPLY (ofp-print.at:2638): ok     (0m0.003s 0m0.006s)
281. OFP_ROLE_STATUS - master, experimenter - OF1.4 (ofp-print.at:2648): ok     (0m0.003s 0m0.006s)
282. OFP_ROLE_STATUS - master, config - OF1.4 (ofp-print.at:2658): ok     (0m0.003s 0m0.006s)
283. OFP_ROLE_STATUS - master, config,generation - OF1.4 (ofp-print.at:2668): ok     (0m0.003s 0m0.006s)
284. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2678): ok     (0m0.003s 0m0.006s)
285. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2690): ok     (0m0.003s 0m0.006s)
286. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2702): ok     (0m0.003s 0m0.006s)
287. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2713): ok     (0m0.003s 0m0.006s)
288. NXT_SET_PACKET_IN (ofp-print.at:2724): ok     (0m0.003s 0m0.006s)
289. NXT_PACKET_IN (ofp-print.at:2734): ok     (0m0.003s 0m0.006s)
290. NXT_PACKET_IN, with hex output of packet data (ofp-print.at:2755): ok     (0m0.003s 0m0.006s)
291. NXT_SET_ASYNC_CONFIG (ofp-print.at:2780): ok     (0m0.003s 0m0.006s)
292. OFPT_SET_ASYNC_CONFIG (ofp-print.at:2800): ok     (0m0.003s 0m0.006s)
293. OFPT_SET_ASYNC_CONFIG - invalid mask - OF1.4 (ofp-print.at:2827): ok     (0m0.003s 0m0.006s)
294. OFPT_SET_ASYNC_CONFIG - unsupported configuration - OF1.4 (ofp-print.at:2839): ok     (0m0.003s 0m0.006s)
295. NXT_SET_CONTROLLER_ID (ofp-print.at:2851): ok     (0m0.003s 0m0.006s)
296. NXT_FLOW_MONITOR_CANCEL (ofp-print.at:2861): ok     (0m0.003s 0m0.006s)
297. NXT_FLOW_MONITOR_PAUSED (ofp-print.at:2871): ok     (0m0.003s 0m0.006s)
298. NXT_FLOW_MONITOR_RESUMED (ofp-print.at:2880): ok     (0m0.003s 0m0.006s)
299. NXT_SET_FLOW_FORMAT (ofp-print.at:2889): ok     (0m0.003s 0m0.006s)
300. NXT_FLOW_MOD, low verbosity (ofp-print.at:2900): ok     (0m0.003s 0m0.006s)
301. NXT_FLOW_MOD, high verbosity (ofp-print.at:2916): ok     (0m0.003s 0m0.006s)
302. OFPT_GROUP_MOD - OF1.1 (ofp-print.at:2930): ok     (0m0.003s 0m0.006s)
303. OFPT_GROUP_MOD add - OF1.5 (ofp-print.at:2946): ok     (0m0.003s 0m0.006s)
304. OFPT_GROUP_MOD insert bucket - OF1.5 (ofp-print.at:2967): ok     (0m0.003s 0m0.006s)
305. NXT_FLOW_REMOVED (ofp-print.at:2985): ok     (0m0.003s 0m0.006s)
306. NXT_FLOW_MOD_TABLE_ID (ofp-print.at:3001): ok     (0m0.003s 0m0.006s)
307. NXST_FLOW request (ofp-print.at:3011): ok     (0m0.003s 0m0.006s)
308. NXST_FLOW reply (ofp-print.at:3021): ok     (0m0.003s 0m0.006s)
309. NXST_AGGREGATE request (ofp-print.at:3175): ok     (0m0.003s 0m0.006s)
310. NXST_AGGREGATE reply (ofp-print.at:3185): ok     (0m0.003s 0m0.006s)
311. NXST_FLOW_MONITOR request (ofp-print.at:3196): ok     (0m0.003s 0m0.006s)
312. NXST_FLOW_MONITOR reply (ofp-print.at:3209): ok     (0m0.003s 0m0.006s)
313. OFPT_BUNDLE_CONTROL - OPEN_REQUEST (ofp-print.at:3224): ok     (0m0.003s 0m0.006s)
314. OFPT_BUNDLE_CONTROL - OPEN_REQUEST (ofp-print.at:3235): ok     (0m0.003s 0m0.006s)
315. OFPT_BUNDLE_CONTROL - OPEN_REQUEST (ofp-print.at:3246): ok     (0m0.003s 0m0.006s)
316. OFPT_BUNDLE_CONTROL - OPEN_REPLY (ofp-print.at:3257): ok     (0m0.003s 0m0.006s)
317. OFPT_BUNDLE_CONTROL - CLOSE_REQUEST (ofp-print.at:3268): ok     (0m0.003s 0m0.006s)
318. OFPT_BUNDLE_CONTROL - CLOSE_REPLY (ofp-print.at:3279): ok     (0m0.003s 0m0.006s)
319. OFPT_BUNDLE_CONTROL - COMMIT_REQUEST (ofp-print.at:3290): ok     (0m0.003s 0m0.006s)
320. OFPT_BUNDLE_CONTROL - COMMIT_REPLY (ofp-print.at:3301): ok     (0m0.003s 0m0.006s)
321. OFPT_BUNDLE_CONTROL - DISCARD_REQUEST (ofp-print.at:3312): ok     (0m0.003s 0m0.006s)
322. OFPT_BUNDLE_CONTROL - DISCARD_REPLY (ofp-print.at:3323): ok     (0m0.003s 0m0.006s)
323. OFPT_BUNDLE_ADD_MESSAGE - verify xid (ofp-print.at:3334): ok     (0m0.003s 0m0.006s)
324. OFPT_BUNDLE_ADD_MESSAGE - reject OFPT_HELLO (ofp-print.at:3344): ok     (0m0.004s 0m0.008s)
325. OFPT_BUNDLE_ADD_MESSAGE - FLOW_MOD (ofp-print.at:3356): ok     (0m0.003s 0m0.006s)
326. OFPT_BUNDLE_ADD_MESSAGE - PORT_MOD (ofp-print.at:3376): ok     (0m0.003s 0m0.006s)
327. encoding hellos (ofp-util.at:3): ok     (0m0.022s 0m0.044s)
328. OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.0 (ofp-errors.at:3): ok     (0m0.003s 0m0.006s)
329. OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.1 (ofp-errors.at:11): ok     (0m0.003s 0m0.006s)
330. OFPT_ERROR with type OFPET_BAD_REQUEST - OF1.0 (ofp-errors.at:19): ok     (0m0.003s 0m0.006s)
331. OFPT_ERROR prints type of truncated inner messages (ofp-errors.at:29): ok     (0m0.003s 0m0.006s)
332. OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.0 (ofp-errors.at:46): ok     (0m0.003s 0m0.006s)
333. OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.1 (ofp-errors.at:54): ok     (0m0.003s 0m0.008s)
334. OFPT_ERROR with type OFPFMFC_OVERLAP - OF1.0 (ofp-errors.at:64): ok     (0m0.003s 0m0.006s)
335. OFPT_ERROR with type OFPBIC_UNSUP_INST - OF1.1 (ofp-errors.at:73): ok     (0m0.003s 0m0.006s)
336. OFPT_ERROR with type OFPBIC_DUP_INST - OF1.4 (ofp-errors.at:83): ok     (0m0.003s 0m0.006s)
337. encoding OFPBIC_* experimenter errors (ofp-errors.at:97): ok     (0m0.005s 0m0.010s)
338. encoding errors extension that became official (ofp-errors.at:117): ok     (0m0.007s 0m0.015s)
339. decoding OFPBIC_* experimenter errors (ofp-errors.at:136): ok     (0m0.007s 0m0.015s)
340. decoding experimenter errors (ofp-errors.at:152): ok     (0m0.015s 0m0.030s)
341. encoding experimenter errors (ofp-errors.at:184): ok     (0m0.020s 0m0.042s)
342. ovs-ofctl parse-flows choice of protocol (ovs-ofctl.at:3): ok     (0m0.493s 0m1.074s)
343. ovs-ofctl parse-flows (OpenFlow 1.0) (ovs-ofctl.at:148): ok     (0m0.006s 0m0.011s)
344. ovs-ofctl parse-flows (OpenFlow 1.1) (ovs-ofctl.at:185): ok     (0m0.005s 0m0.011s)
345. ovs-ofctl parse-flows (OpenFlow 1.2) (ovs-ofctl.at:222): ok     (0m0.005s 0m0.011s)
346. ovs-ofctl parse-flow with invalid mask (ovs-ofctl.at:267): ok     (0m0.111s 0m0.230s)
347. ovs-ofctl action inconsistency (OpenFlow 1.1) (ovs-ofctl.at:306): ok     (0m0.007s 0m0.014s)
348. ovs-ofctl parse-flows (skb_priority) (ovs-ofctl.at:312): ok     (0m0.006s 0m0.013s)
349. ovs-ofctl parse-flows (NXM) (ovs-ofctl.at:324): ok     (0m0.012s 0m0.022s)
350. ovs-ofctl -F nxm parse-flows (ovs-ofctl.at:407): ok     (0m0.012s 0m0.023s)
351. ovs-ofctl -F nxm -mmm parse-flows (ovs-ofctl.at:480): ok     (0m0.006s 0m0.012s)
352. ovs-ofctl parse-nx-match (ovs-ofctl.at:553): ok     (0m0.009s 0m0.017s)
353. ovs-ofctl parse-ofp10-match (ovs-ofctl.at:1173): ok     (0m0.006s 0m0.011s)
354. ovs-ofctl parse-ofp11-match (ovs-ofctl.at:1390): ok     (0m0.006s 0m0.011s)
355. ovs-ofctl parse-nx-match loose (ovs-ofctl.at:1716): ok     (0m0.006s 0m0.012s)
356. ovs-ofctl parse-oxm (OpenFlow 1.2) (ovs-ofctl.at:1737): ok     (0m0.009s 0m0.017s)
357. ovs-ofctl parse-oxm (OpenFlow 1.3) (ovs-ofctl.at:2231): ok     (0m0.003s 0m0.007s)
358. ovs-ofctl parse-oxm (OpenFlow 1.5) (ovs-ofctl.at:2254): ok     (0m0.004s 0m0.007s)
359. ovs-ofctl parse-oxm loose (ovs-ofctl.at:2319): ok     (0m0.006s 0m0.012s)
360. experimenter OXM encoding (ovs-ofctl.at:2340): ok     (0m0.006s 0m0.012s)
361. check TCP flags expression in OXM and NXM (ovs-ofctl.at:2387): ok     (0m0.014s 0m0.031s)
362. ovs-ofctl check-vlan (ovs-ofctl.at:2419): ok     (0m0.026s 0m0.053s)
363. ovs-ofctl -F option and NXM features (ovs-ofctl.at:2516): ok     (0m0.005s 0m0.011s)
364. ovs-ofctl -F option with flow_mods (ovs-ofctl.at:2529): ok     (0m0.033s 0m0.064s)
365. ovs-ofctl dump-flows honors -F option (ovs-ofctl.at:2541): ok     (0m0.033s 0m0.063s)
366. ovs-ofctl dump-flows rejects bad -F option (ovs-ofctl.at:2553): ok     (0m0.029s 0m0.055s)
367. ovs-ofctl add-flow reports non-normalized flows (ovs-ofctl.at:2562): ok     (0m0.030s 0m0.057s)
368. ovs-ofctl dump-flows with sorting (ovs-ofctl.at:2576): ok     (0m0.056s 0m0.112s)
369. ovs-ofctl diff-flows (ovs-ofctl.at:2663): ok     (0m4.395s 0m13.228s)
370. ovs-ofctl diff-flows - suppress false differences (ovs-ofctl.at:2695): ok     (0m0.039s 0m0.075s)
371. ovs-ofctl -F and -O interaction (ovs-ofctl.at:2712): ok     (0m0.014s 0m0.030s)
372. ovs-ofctl ofp-parse (ovs-ofctl.at:2733): ok     (0m0.006s 0m0.012s)
373. tcp flags - filtering (ovs-ofctl.at:2751): ok     (0m0.058s 0m0.118s)
374. ovs-ofctl rule with importance (ovs-ofctl.at:2820): ok     (0m0.045s 0m0.092s)
375. ovs-ofctl replace-flows with importance (ovs-ofctl.at:2847): ok     (0m0.043s 0m0.087s)
376. ovs-ofctl replace-flows with --bundle (ovs-ofctl.at:2866): ok     (0m0.055s 0m0.115s)
377. OVS datapath key parsing and formatting - valid forms (odp.at:3): ok     (0m0.024s 0m0.040s)
378. OVS datapath wildcarded key parsing and formatting - valid forms (odp.at:102): ok     (0m0.019s 0m0.036s)
379. OVS datapath wildcarded key filtering. (odp.at:180): ok     (0m0.042s 0m0.094s)
380. OVS datapath actions parsing and formatting - valid forms (odp.at:245): ok     (0m0.005s 0m0.010s)
381. MPLS xlate action (mpls-xlate.at:3): ok     (0m0.063s 0m0.128s)
382. modulo_n multipath link selection (multipath.at:10): ok     (0m1.348s 0m0.007s)
383. hash_threshold multipath link selection (multipath.at:78): ok     (0m1.064s 0m0.006s)
384. hrw multipath link selection (multipath.at:146): ok     (0m2.388s 0m0.008s)
385. iter_hash multipath link selection (multipath.at:214): ok     (0m1.436s 0m0.009s)
386. multipath action missing argument (multipath.at:282): ok     (0m0.003s 0m0.006s)
387. multipath action bad fields (multipath.at:288): ok     (0m0.003s 0m0.006s)
388. multipath action bad algorithm (multipath.at:294): ok     (0m0.003s 0m0.006s)
389. multipath action bad n_links (multipath.at:300): ok     (0m0.003s 0m0.006s)
390. multipath action destination too narrow (multipath.at:306): ok     (0m0.003s 0m0.006s)
391. learning action - parsing and formatting (learn.at:3): ok     (0m0.004s 0m0.007s)
392. learning action - parsing and formatting - illegal in_port_oxm (learn.at:24): ok     (0m0.005s 0m0.010s)
393. learning action - parsing and formatting - OXM (learn.at:33): ok     (0m0.004s 0m0.007s)
394. learning action - examples (learn.at:46): ok     (0m0.004s 0m0.007s)
395. learning action - satisfied prerequisites (learn.at:64): ok     (0m0.004s 0m0.007s)
396. learning action - invalid prerequisites (learn.at:79): ok     (0m0.009s 0m0.018s)
397. learning action - too-long immediate value (learn.at:94): ok     (0m0.007s 0m0.014s)
398. learning action - standard VLAN+MAC learning (learn.at:108): ok     (0m0.072s 0m0.150s)
399. learning action - learn refreshes hard_age (learn.at:177): ok     (0m0.424s 0m0.910s)
400. learning action - TCPv4 port learning (learn.at:245): ok     (0m0.099s 0m0.198s)
401. learning action - TCPv6 port learning (learn.at:271): ok     (0m0.093s 0m0.188s)
402. learning action - self-modifying flow (learn.at:303): ok     (0m0.132s 0m0.250s)
403. learning action - self-modifying flow with idle_timeout (learn.at:345): ok     (0m0.246s 0m0.500s)
404. learning action - self-modifying flow with hard_timeout (learn.at:403): ok     (0m0.258s 0m0.532s)
405. learning action - fin_timeout feature (learn.at:487): ok     (0m0.061s 0m0.120s)
406. learning action - delete_learned feature (learn.at:502): ok     (0m0.108s 0m0.228s)
407. unix vconn - refuse connection (vconn.at:20): ok     (0m0.003s 0m0.006s)
408. unix vconn - accept then close (vconn.at:20): ok     (0m0.003s 0m0.005s)
409. unix vconn - read hello (vconn.at:20): ok     (0m0.003s 0m0.005s)
410. unix vconn - send plain hello (vconn.at:20): ok     (0m0.003s 0m0.005s)
411. unix vconn - send long hello (vconn.at:20): ok     (0m0.003s 0m0.005s)
412. unix vconn - send echo hello (vconn.at:20): ok     (0m0.006s 0m0.013s)
413. unix vconn - send short hello (vconn.at:20): ok     (0m0.006s 0m0.013s)
414. unix vconn - send invalid version hello (vconn.at:20): ok     (0m0.006s 0m0.013s)
415. tcp vconn - refuse connection (vconn.at:21): ok     (0m0.006s 0m0.013s)
416. tcp vconn - accept then close (vconn.at:21): ok     (0m0.003s 0m0.005s)
417. tcp vconn - read hello (vconn.at:21): ok     (0m0.003s 0m0.005s)
418. tcp vconn - send plain hello (vconn.at:21): ok     (0m0.003s 0m0.006s)
419. tcp vconn - send long hello (vconn.at:21): ok     (0m0.003s 0m0.006s)
420. tcp vconn - send echo hello (vconn.at:21): ok     (0m0.003s 0m0.005s)
421. tcp vconn - send short hello (vconn.at:21): ok     (0m0.003s 0m0.005s)
422. tcp vconn - send invalid version hello (vconn.at:21): ok     (0m0.003s 0m0.005s)
423. ssl vconn - refuse connection (vconn.at:22): ok     (0m0.006s 0m0.010s)
424. ssl vconn - accept then close (vconn.at:22): ok     (0m0.013s 0m0.019s)
425. ssl vconn - read hello (vconn.at:22): ok     (0m0.036s 0m0.026s)
426. ssl vconn - send plain hello (vconn.at:22): ok     (0m0.036s 0m0.026s)
427. ssl vconn - send long hello (vconn.at:22): ok     (0m0.036s 0m0.025s)
428. ssl vconn - send echo hello (vconn.at:22): ok     (0m0.036s 0m0.025s)
429. ssl vconn - send short hello (vconn.at:22): ok     (0m0.036s 0m0.025s)
430. ssl vconn - send invalid version hello (vconn.at:22): ok     (0m0.015s 0m0.010s)
431. components of "/usr/lib" are "/usr", "lib" (file_name.at:13): ok     (0m0.003s 0m0.006s)
432. components of "/usr/" are "/", "usr" (file_name.at:14): ok     (0m0.003s 0m0.006s)
433. components of "usr" are ".", "usr" (file_name.at:15): ok     (0m0.003s 0m0.006s)
434. components of "/" are "/", "/" (file_name.at:16): ok     (0m0.003s 0m0.006s)
435. components of "." are ".", "." (file_name.at:17): ok     (0m0.003s 0m0.006s)
436. components of ".." are ".", ".." (file_name.at:18): ok     (0m0.003s 0m0.006s)
437. components of "//" are "//", "//" (file_name.at:19): ok     (0m0.003s 0m0.006s)
438. components of "//foo" are "//", "foo" (file_name.at:20): ok     (0m0.003s 0m0.006s)
439. components of "" are ".", "." (file_name.at:21): ok     (0m0.003s 0m0.006s)
440. components of "dir/file" are "dir", "file" (file_name.at:24): ok     (0m0.004s 0m0.008s)
441. components of "dir/file/" are "dir", "file" (file_name.at:25): ok     (0m0.003s 0m0.006s)
442. components of "dir/file//" are "dir", "file" (file_name.at:26): ok     (0m0.003s 0m0.006s)
443. components of "///foo" are "/", "foo" (file_name.at:27): ok     (0m0.003s 0m0.006s)
444. follow_symlinks - relative symlinks (file_name.at:37): ok     (0m0.011s 0m0.023s)
445. follow_symlinks - absolute symlinks (file_name.at:54): ok     (0m0.033s 0m0.073s)
446. follow_symlinks - symlinks to directories (file_name.at:71): ok     (0m0.022s 0m0.046s)
447. follow_symlinks - nonexistent targets (file_name.at:84): ok     (0m0.008s 0m0.018s)
448. follow_symlinks - regular files (file_name.at:92): ok     (0m0.003s 0m0.006s)
449. follow_symlinks - device targets (file_name.at:97): ok     (0m0.006s 0m0.013s)
450. follow_symlinks - nonexistent files (file_name.at:106): ok     (0m0.010s 0m0.021s)
451. follow_symlinks - symlink loop (file_name.at:114): ok     (0m0.007s 0m0.014s)
452. wikipedia test vector 1 (aes128.at:10): ok     (0m0.003s 0m0.006s)
453. wikipedia test vector 2 (aes128.at:16): ok     (0m0.003s 0m0.006s)
454. NIST KAT ECBKeySbox128e vector 0 (aes128.at:22): ok     (0m0.003s 0m0.006s)
455. NIST KAT ECBKeySbox128e vector 1 (aes128.at:28): ok     (0m0.003s 0m0.006s)
456. NIST KAT ECBKeySbox128e vector 2 (aes128.at:34): ok     (0m0.003s 0m0.006s)
457. NIST KAT ECBKeySbox128e vector 3 (aes128.at:40): ok     (0m0.003s 0m0.006s)
458. NIST KAT ECBKeySbox128e vector 4 (aes128.at:46): ok     (0m0.003s 0m0.006s)
459. NIST KAT ECBKeySbox128e vector 5 (aes128.at:52): ok     (0m0.003s 0m0.006s)
460. NIST KAT ECBKeySbox128e vector 6 (aes128.at:58): ok     (0m0.003s 0m0.005s)
461. NIST KAT ECBKeySbox128e vector 7 (aes128.at:64): ok     (0m0.003s 0m0.006s)
462. NIST KAT ECBKeySbox128e vector 8 (aes128.at:70): ok     (0m0.003s 0m0.006s)
463. NIST KAT ECBKeySbox128e vector 9 (aes128.at:76): ok     (0m0.006s 0m0.014s)
464. NIST KAT ECBKeySbox128e vector 10 (aes128.at:82): ok     (0m0.007s 0m0.014s)
465. NIST KAT ECBKeySbox128e vector 11 (aes128.at:88): ok     (0m0.006s 0m0.013s)
466. NIST KAT ECBKeySbox128e vector 12 (aes128.at:94): ok     (0m0.003s 0m0.006s)
467. NIST KAT ECBKeySbox128e vector 13 (aes128.at:100): ok     (0m0.003s 0m0.006s)
468. NIST KAT ECBKeySbox128e vector 14 (aes128.at:106): ok     (0m0.003s 0m0.006s)
469. NIST KAT ECBKeySbox128e vector 15 (aes128.at:112): ok     (0m0.003s 0m0.006s)
470. NIST KAT ECBKeySbox128e vector 16 (aes128.at:118): ok     (0m0.003s 0m0.006s)
471. NIST KAT ECBKeySbox128e vector 17 (aes128.at:124): ok     (0m0.003s 0m0.006s)
472. NIST KAT ECBKeySbox128e vector 18 (aes128.at:130): ok     (0m0.003s 0m0.006s)
473. NIST KAT ECBKeySbox128e vector 19 (aes128.at:136): ok     (0m0.003s 0m0.006s)
474. NIST KAT ECBKeySbox128e vector 20 (aes128.at:142): ok     (0m0.003s 0m0.006s)
475. unixctl ovs-vswitchd exit - Python (unixctl-py.at:6): ok     (0m0.132s 0m0.082s)
476. unixctl ovs-vswitchd list-commands - Python (unixctl-py.at:17): ok     (0m0.087s 0m0.083s)
477. unixctl ovs-vswitchd arguments - Python (unixctl-py.at:32): ok     (0m0.300s 0m0.195s)
478. unixctl bad target - Python (unixctl-py.at:74): ok     (0m0.108s 0m0.050s)
479. unixctl server - Python (unixctl-py.at:89): ok     (0m0.445s 0m0.240s)
480. unixctl server errors - Python (unixctl-py.at:159): ok     (0m0.129s 0m0.053s)
481. UUID generation, parsing, serialization (uuid.at:15): ok     (0m0.390s 0m1.015s)
482. empty array - C (json.at:65): ok     (0m0.005s 0m0.010s)
483. empty array - Python (json.at:65): ok     (0m0.020s 0m0.017s)
484. single-element array - C (json.at:66): ok     (0m0.004s 0m0.010s)
485. single-element array - Python (json.at:66): ok     (0m0.020s 0m0.017s)
486. 2-element array - C (json.at:67): ok     (0m0.004s 0m0.010s)
487. 2-element array - Python (json.at:67): ok     (0m0.020s 0m0.017s)
488. many-element array - C (json.at:68): ok     (0m0.005s 0m0.010s)
489. many-element array - Python (json.at:68): ok     (0m0.020s 0m0.017s)
490. missing comma - C (json.at:71): ok     (0m0.005s 0m0.010s)
491. missing comma - Python (json.at:71): ok     (0m0.020s 0m0.017s)
492. trailing comma not allowed - C (json.at:73): ok     (0m0.005s 0m0.011s)
493. trailing comma not allowed - Python (json.at:73): ok     (0m0.020s 0m0.017s)
494. doubled comma not allowed - C (json.at:75): ok     (0m0.005s 0m0.010s)
495. doubled comma not allowed - Python (json.at:75): ok     (0m0.020s 0m0.017s)
496. empty string - C (json.at:80): ok     (0m0.004s 0m0.010s)
497. empty string - Python (json.at:80): ok     (0m0.020s 0m0.017s)
498. 1-character strings - C (json.at:81): ok     (0m0.005s 0m0.010s)
499. 1-character strings - Python (json.at:81): ok     (0m0.020s 0m0.017s)
500. escape sequences - C (json.at:84): ok     (0m0.004s 0m0.010s)
501. escape sequences - Python (json.at:84): ok     (0m0.020s 0m0.017s)
502. Unicode escape sequences - C (json.at:87): ok     (0m0.005s 0m0.010s)
503. Unicode escape sequences - Python (json.at:87): ok     (0m0.020s 0m0.017s)
504. surrogate pairs - C (json.at:90): ok     (0m0.004s 0m0.010s)
505. surrogate pairs - Python (json.at:93): ok     (0m0.019s 0m0.016s)
506. a string by itself is not valid JSON - C (json.at:96): ok     (0m0.005s 0m0.010s)
507. a string by itself is not valid JSON - Python (json.at:96): ok     (0m0.020s 0m0.017s)
508. end of line in quoted string - C (json.at:98): ok     (0m0.005s 0m0.010s)
509. end of line in quoted string - Python (json.at:98): ok     (0m0.020s 0m0.017s)
510. formfeed in quoted string - C (json.at:102): ok     (0m0.005s 0m0.010s)
511. formfeed in quoted string - Python (json.at:102): ok     (0m0.020s 0m0.017s)
512. bad escape in quoted string - C (json.at:105): ok     (0m0.005s 0m0.010s)
513. bad escape in quoted string - Python (json.at:105): ok     (0m0.020s 0m0.017s)
514. \u must be followed by 4 hex digits (1) - C (json.at:108): ok     (0m0.005s 0m0.010s)
515. \u must be followed by 4 hex digits (1) - Python (json.at:108): ok     (0m0.021s 0m0.019s)
516. \u must be followed by 4 hex digits (2) - C (json.at:111): ok     (0m0.005s 0m0.010s)
517. \u must be followed by 4 hex digits (2) - Python (json.at:111): ok     (0m0.020s 0m0.017s)
518. isolated leading surrogate not allowed - C (json.at:114): ok     (0m0.006s 0m0.013s)
519. isolated leading surrogate not allowed - Python (json.at:114): ok     (0m0.048s 0m0.041s)
520. surrogatess must paired properly - C (json.at:117): ok     (0m0.011s 0m0.024s)
521. surrogatess must paired properly - Python (json.at:117): ok     (0m0.020s 0m0.017s)
522. null bytes not allowed - C (json.at:120): ok     (0m0.005s 0m0.010s)
523. null bytes not allowed - Python (json.at:120): ok     (0m0.020s 0m0.017s)
524. properly quoted backslash at end of string - C (json.at:124): ok     (0m0.004s 0m0.010s)
525. properly quoted backslash at end of string - Python (json.at:124): ok     (0m0.020s 0m0.017s)
526. stray backslash at end of string - C (json.at:127): ok     (0m0.005s 0m0.010s)
527. stray backslash at end of string - Python (json.at:127): ok     (0m0.021s 0m0.018s)
528. end of input in quoted string - C (json.at:131): ok     (0m0.003s 0m0.007s)
529. end of input in quoted string - Python (json.at:138): ok     (0m0.019s 0m0.013s)
530. empty object - C (json.at:149): ok     (0m0.005s 0m0.010s)
531. empty object - Python (json.at:149): ok     (0m0.021s 0m0.018s)
532. simple object - C (json.at:150): ok     (0m0.005s 0m0.010s)
533. simple object - Python (json.at:150): ok     (0m0.020s 0m0.017s)
534. bad value - C (json.at:153): ok     (0m0.005s 0m0.010s)
535. bad value - Python (json.at:153): ok     (0m0.020s 0m0.017s)
536. missing colon - C (json.at:155): ok     (0m0.005s 0m0.012s)
537. missing colon - Python (json.at:155): ok     (0m0.021s 0m0.018s)
538. missing comma - C (json.at:157): ok     (0m0.005s 0m0.010s)
539. missing comma - Python (json.at:157): ok     (0m0.020s 0m0.017s)
540. trailing comma not allowed - C (json.at:159): ok     (0m0.005s 0m0.010s)
541. trailing comma not allowed - Python (json.at:159): ok     (0m0.020s 0m0.017s)
542. doubled comma not allowed - C (json.at:162): ok     (0m0.005s 0m0.010s)
543. doubled comma not allowed - Python (json.at:162): ok     (0m0.020s 0m0.017s)
544. names must be strings - C (json.at:165): ok     (0m0.005s 0m0.010s)
545. names must be strings - Python (json.at:165): ok     (0m0.020s 0m0.017s)
546. null - C (json.at:171): ok     (0m0.005s 0m0.010s)
547. null - Python (json.at:171): ok     (0m0.021s 0m0.019s)
548. false - C (json.at:172): ok     (0m0.005s 0m0.010s)
549. false - Python (json.at:172): ok     (0m0.020s 0m0.017s)
550. true - C (json.at:173): ok     (0m0.004s 0m0.010s)
551. true - Python (json.at:173): ok     (0m0.020s 0m0.017s)
552. a literal by itself is not valid JSON - C (json.at:174): ok     (0m0.005s 0m0.010s)
553. a literal by itself is not valid JSON - Python (json.at:174): ok     (0m0.021s 0m0.018s)
554. nullify is invalid - C (json.at:176): ok     (0m0.005s 0m0.010s)
555. nullify is invalid - Python (json.at:176): ok     (0m0.020s 0m0.017s)
556. nubs is invalid - C (json.at:178): ok     (0m0.005s 0m0.010s)
557. nubs is invalid - Python (json.at:178): ok     (0m0.020s 0m0.017s)
558. xxx is invalid - C (json.at:180): ok     (0m0.005s 0m0.010s)
559. xxx is invalid - Python (json.at:180): ok     (0m0.020s 0m0.017s)
560. integers expressed as reals - C (json.at:185): ok     (0m0.005s 0m0.010s)
561. integers expressed as reals - Python (json.at:185): ok     (0m0.020s 0m0.017s)
562. large integers - C (json.at:195): ok     (0m0.004s 0m0.010s)
563. large integers - Python (json.at:195): ok     (0m0.020s 0m0.017s)
564. large integers expressed as reals - C (json.at:199): ok     (0m0.005s 0m0.010s)
565. large integers expressed as reals - Python (json.at:199): ok     (0m0.020s 0m0.017s)
566. large integers that overflow to reals - C (json.at:207): ok     (0m0.005s 0m0.010s)
567. large integers that overflow to reals - Python (json.at:207): ok     (0m0.020s 0m0.017s)
568. negative zero - C (json.at:212): ok     (0m0.005s 0m0.010s)
569. negative zero - Python (json.at:212): ok     (0m0.020s 0m0.017s)
570. reals - C (json.at:217): ok     (0m0.006s 0m0.013s)
571. reals - Python (json.at:217): ok     (0m0.020s 0m0.017s)
572. scientific notation - C (json.at:221): ok     (0m0.005s 0m0.010s)
573. scientific notation - Python (json.at:221): ok     (0m0.020s 0m0.017s)
574. +/- DBL_MAX - C (json.at:228): ok     (0m0.005s 0m0.010s)
575. +/- DBL_MAX - Python (json.at:228): ok     (0m0.020s 0m0.017s)
576. negative reals - C (json.at:233): ok     (0m0.005s 0m0.010s)
577. negative reals - Python (json.at:233): ok     (0m0.020s 0m0.017s)
578. negative scientific notation - C (json.at:237): ok     (0m0.005s 0m0.010s)
579. negative scientific notation - Python (json.at:237): ok     (0m0.020s 0m0.017s)
580. 1e-9999 underflows to 0 - C (json.at:241): ok     (0m0.004s 0m0.010s)
581. 1e-9999 underflows to 0 - Python (json.at:241): ok     (0m0.020s 0m0.017s)
582. a number by itself is not valid JSON - C (json.at:245): ok     (0m0.005s 0m0.010s)
583. a number by itself is not valid JSON - Python (json.at:245): ok     (0m0.020s 0m0.017s)
584. leading zeros not allowed - C (json.at:247): ok     (0m0.005s 0m0.010s)
585. leading zeros not allowed - Python (json.at:247): ok     (0m0.020s 0m0.017s)
586. 1e9999 is too big - C (json.at:251): ok     (0m0.005s 0m0.010s)
587. 1e9999 is too big - Python (json.at:251): ok     (0m0.020s 0m0.017s)
588. exponent bigger than INT_MAX - C (json.at:255): ok     (0m0.005s 0m0.010s)
589. exponent bigger than INT_MAX - Python (json.at:255): ok     (0m0.020s 0m0.017s)
590. decimal point must be followed by digit - C (json.at:259): ok     (0m0.005s 0m0.010s)
591. decimal point must be followed by digit - Python (json.at:259): ok     (0m0.020s 0m0.017s)
592. exponent must contain at least one digit (1) - C (json.at:263): ok     (0m0.005s 0m0.010s)
593. exponent must contain at least one digit (1) - Python (json.at:263): ok     (0m0.020s 0m0.017s)
594. exponent must contain at least one digit (2) - C (json.at:267): ok     (0m0.005s 0m0.010s)
595. exponent must contain at least one digit (2) - Python (json.at:267): ok     (0m0.022s 0m0.018s)
596. exponent must contain at least one digit (3) - C (json.at:271): ok     (0m0.005s 0m0.010s)
597. exponent must contain at least one digit (3) - Python (json.at:271): ok     (0m0.020s 0m0.017s)
598. RFC 4267 object example - C (json.at:278): ok     (0m0.005s 0m0.010s)
599. RFC 4267 object example - Python (json.at:278): ok     (0m0.020s 0m0.017s)
600. RFC 4267 array example - C (json.at:294): ok     (0m0.005s 0m0.010s)
601. RFC 4267 array example - Python (json.at:294): ok     (0m0.020s 0m0.017s)
602. trailing garbage - C (json.at:321): ok     (0m0.005s 0m0.010s)
603. trailing garbage - Python (json.at:321): ok     (0m0.020s 0m0.017s)
604. formfeeds are not valid white space - C (json.at:323): ok     (0m0.005s 0m0.010s)
605. formfeeds are not valid white space - Python (json.at:323): ok     (0m0.021s 0m0.018s)
606. ';' is not a valid token - C (json.at:325): ok     (0m0.005s 0m0.010s)
607. ';' is not a valid token - Python (json.at:325): ok     (0m0.020s 0m0.017s)
608. arrays nesting too deep - C (json.at:327): ok     (0m0.005s 0m0.010s)
609. arrays nesting too deep - Python (json.at:327): ok     (0m0.024s 0m0.017s)
610. objects nesting too deep - C (json.at:331): ok     (0m0.006s 0m0.010s)
611. objects nesting too deep - Python (json.at:331): ok     (0m0.033s 0m0.018s)
612. input may not be empty (json.at:336): ok     (0m0.003s 0m0.006s)
613. multiple adjacent objects - C (json.at:344): ok     (0m0.004s 0m0.010s)
614. multiple adjacent objects - Python (json.at:344): ok     (0m0.020s 0m0.017s)
615. multiple space-separated objects - C (json.at:349): ok     (0m0.005s 0m0.010s)
616. multiple space-separated objects - Python (json.at:349): ok     (0m0.020s 0m0.017s)
617. multiple objects on separate lines - C (json.at:354): ok     (0m0.005s 0m0.010s)
618. multiple objects on separate lines - Python (json.at:354): ok     (0m0.020s 0m0.017s)
619. multiple objects and arrays - C (json.at:361): ok     (0m0.004s 0m0.010s)
620. multiple objects and arrays - Python (json.at:361): ok     (0m0.020s 0m0.017s)
621. garbage between multiple objects - C (json.at:367): ok     (0m0.005s 0m0.010s)
622. garbage between multiple objects - Python (json.at:367): ok     (0m0.020s 0m0.017s)
623. garbage after multiple objects - C (json.at:371): ok     (0m0.005s 0m0.010s)
624. garbage after multiple objects - Python (json.at:371): ok     (0m0.020s 0m0.017s)
625. JSON-RPC request and successful reply (jsonrpc.at:3): ok     (0m0.008s 0m0.019s)
626. JSON-RPC request and error reply (jsonrpc.at:14): ok     (0m0.008s 0m0.019s)
627. JSON-RPC notification (jsonrpc.at:25): ok     (0m0.011s 0m0.026s)
628. JSON-RPC request and successful reply - Python (jsonrpc-py.at:3): ok     (0m0.111s 0m0.058s)
629. JSON-RPC request and error reply - Python (jsonrpc-py.at:15): ok     (0m0.114s 0m0.060s)
630. JSON-RPC notification - Python (jsonrpc-py.at:27): ok     (0m0.114s 0m0.066s)
631. tunnel - input (tunnel.at:3): ok     (0m0.060s 0m0.120s)
632. tunnel - ECN decapsulation (tunnel.at:65): ok     (0m0.053s 0m0.106s)
633. tunnel - output (tunnel.at:112): ok     (0m0.042s 0m0.083s)
634. tunnel - ToS and TTL inheritance (tunnel.at:145): ok     (0m0.047s 0m0.093s)
635. tunnel - set_tunnel (tunnel.at:184): ok     (0m0.038s 0m0.075s)
636. tunnel - key (tunnel.at:219): ok     (0m0.049s 0m0.098s)
637. tunnel - key match (tunnel.at:269): ok     (0m0.052s 0m0.104s)
638. tunnel - Geneve (tunnel.at:319): ok     (0m0.030s 0m0.056s)
639. tunnel - VXLAN (tunnel.at:331): ok     (0m0.030s 0m0.057s)
640. tunnel - LISP (tunnel.at:343): ok     (0m0.030s 0m0.058s)
641. tunnel - different VXLAN UDP port (tunnel.at:355): ok     (0m0.041s 0m0.077s)
642. ofproto-dpif - set_field - tun_src/tun_dst/tun_id (tunnel.at:384): ok     (0m0.038s 0m0.071s)
643. tunnel - Geneve metadata (tunnel.at:415): ok     (0m0.070s 0m0.143s)
644. tunnel - Geneve option present (tunnel.at:489): ok     (0m0.049s 0m0.098s)
645. tunnel_push_pop - action (tunnel-push-pop.at:3): ok     (0m0.120s 0m0.247s)
646. tunnel_push_pop_ipv6 - action (tunnel-push-pop-ipv6.at:3): ok     (0m0.033s 0m0.059s)
647. lock and unlock (lockfile.at:15): ok     (0m0.004s 0m0.009s)
648. lock and unlock twice (lockfile.at:17): ok     (0m0.004s 0m0.009s)
649. lock blocks same process (lockfile.at:19): ok     (0m0.005s 0m0.011s)
650. lock blocks same process twice (lockfile.at:23): ok     (0m0.005s 0m0.011s)
651. lock blocks other process (lockfile.at:28): ok     (0m0.006s 0m0.012s)
652. lock twice blocks other process (lockfile.at:33): ok     (0m0.006s 0m0.012s)
653. lock and unlock allows other process (lockfile.at:39): ok     (0m0.005s 0m0.010s)
654. lock multiple (lockfile.at:41): ok     (0m0.005s 0m0.011s)
655. lock symlink (lockfile.at:45): ok     (0m0.006s 0m0.012s)
656. lock symlink to dir (lockfile.at:52): ok     (0m0.006s 0m0.012s)
657. nothing happens if not enabled - C (reconnect.at:26): ok     (0m0.003s 0m0.007s)
658. nothing happens if not enabled - Python (reconnect.at:26): ok     (0m0.029s 0m0.017s)
659. quick connect, idle disconnect - C (reconnect.at:37): ok     (0m0.004s 0m0.007s)
660. quick connect, idle disconnect - Python (reconnect.at:37): ok     (0m0.031s 0m0.018s)
661. slow connect, idle disconnect - C (reconnect.at:93): ok     (0m0.004s 0m0.007s)
662. slow connect, idle disconnect - Python (reconnect.at:93): ok     (0m0.031s 0m0.018s)
663. connect backs off - C (reconnect.at:163): ok     (0m0.004s 0m0.008s)
664. connect backs off - Python (reconnect.at:163): ok     (0m0.029s 0m0.017s)
665. connections with no data preserve backoff - C (reconnect.at:362): ok     (0m0.003s 0m0.007s)
666. connections with no data preserve backoff - Python (reconnect.at:362): ok     (0m0.029s 0m0.017s)
667. brief connection preserves backoff - C (reconnect.at:526): ok     (0m0.004s 0m0.008s)
668. brief connection preserves backoff - Python (reconnect.at:526): ok     (0m0.029s 0m0.017s)
669. brief connection with data preserves backoff - C (reconnect.at:657): ok     (0m0.003s 0m0.007s)
670. brief connection with data preserves backoff - Python (reconnect.at:657): ok     (0m0.029s 0m0.017s)
671. long connection resets backoff - C (reconnect.at:818): ok     (0m0.003s 0m0.007s)
672. long connection resets backoff - Python (reconnect.at:818): ok     (0m0.029s 0m0.017s)
673. connection attempt fails quickly - C (reconnect.at:979): ok     (0m0.003s 0m0.007s)
674. connection attempt fails quickly - Python (reconnect.at:979): ok     (0m0.028s 0m0.016s)
675. max-tries of 1 honored - C (reconnect.at:1034): ok     (0m0.003s 0m0.007s)
676. max-tries of 1 honored - Python (reconnect.at:1034): ok     (0m0.028s 0m0.017s)
677. max-tries of 0 honored - C (reconnect.at:1094): ok     (0m0.003s 0m0.007s)
678. max-tries of 0 honored - Python (reconnect.at:1094): ok     (0m0.028s 0m0.016s)
679. passive mode - C (reconnect.at:1110): ok     (0m0.003s 0m0.007s)
680. passive mode - Python (reconnect.at:1110): ok     (0m0.028s 0m0.016s)
681. ovs-vswitchd detaches correctly with empty db (ovs-vswitchd.at:7): ok     (0m0.010s 0m0.019s)
682. ovs-vswitchd -- stats-update-interval (ovs-vswitchd.at:34): ok     (0m0.139s 0m0.269s)
683. ovs-vswitchd -- start additional ovs-vswitchd process (ovs-vswitchd.at:67): ok     (0m0.085s 0m0.163s)
684. ovs-vswitchd -- switch over to another ovs-vswitchd process (ovs-vswitchd.at:91): ok     (0m0.091s 0m0.160s)
685. ovs-vswitchd -- invalid database path (ovs-vswitchd.at:130): ok     (0m0.016s 0m0.032s)
686. ovs-vswitchd -- set service controller (ovs-vswitchd.at:154): ok     (0m0.085s 0m0.160s)
687. ovs-vswitchd - do not create sockets with unsafe names (ovs-vswitchd.at:168): ok     (0m0.069s 0m0.125s)
688. ofproto - echo request (ofproto.at:3): ok     (0m0.028s 0m0.054s)
689. ofproto - handling messages with bad version (ofproto.at:9): ok     (0m0.035s 0m0.065s)
690. ofproto - feature request, config request (ofproto.at:32): ok     (0m0.031s 0m0.059s)
691. ofproto - set OpenFlow port number (ofproto.at:49): ok     (0m0.033s 0m0.064s)
692. ofproto - port stats - (OpenFlow 1.0) (ofproto.at:82): ok     (0m0.074s 0m0.142s)
693. ofproto - port stats - (OpenFlow 1.2) (ofproto.at:93): ok     (0m0.060s 0m0.114s)
694. ofproto - port stats - (OpenFlow 1.4) (ofproto.at:104): ok     (0m0.032s 0m0.061s)
695. ofproto - port-desc stats (OpenFlow 1.0) (ofproto.at:119): ok     (0m0.031s 0m0.058s)
696. ofproto - port-desc stats (OpenFlow 1.2) (ofproto.at:134): ok     (0m0.030s 0m0.059s)
697. ofproto - port-desc stats (OpenFlow 1.5) (ofproto.at:147): ok     (0m0.039s 0m0.074s)
698. ofproto - queue stats - (OpenFlow 1.0) (ofproto.at:183): ok     (0m0.037s 0m0.071s)
699. ofproto - queue stats - (OpenFlow 1.2) (ofproto.at:200): ok     (0m0.036s 0m0.069s)
700. ofproto - queue stats - (OpenFlow 1.4) (ofproto.at:217): ok     (0m0.036s 0m0.069s)
701. ofproto - queue configuration - (OpenFlow 1.0) (ofproto.at:236): ok     (0m0.035s 0m0.065s)
702. ofproto - queue configuration - (OpenFlow 1.2) (ofproto.at:250): ok     (0m0.036s 0m0.068s)
703. ofproto - no group support (OpenFlow 1.0) (ofproto.at:267): ok     (0m0.065s 0m0.129s)
704. ofproto - del group (OpenFlow 1.1) (ofproto.at:286): ok     (0m0.098s 0m0.198s)
705. ofproto - add indirect group (ofproto.at:327): ok     (0m0.033s 0m0.063s)
706. ofproto - del group (OpenFlow 1.5) (ofproto.at:343): ok     (0m0.051s 0m0.101s)
707. ofproto - del group deletes flows (ofproto.at:380): ok     (0m0.084s 0m0.176s)
708. ofproto - insert buckets (ofproto.at:421): ok     (0m0.109s 0m0.224s)
709. ofproto - remove buckets (ofproto.at:517): ok     (0m0.070s 0m0.145s)
710. ofproto - flow mod checks group availability (ofproto.at:573): ok     (0m0.035s 0m0.069s)
711. ofproto - group description (ofproto.at:601): ok     (0m0.034s 0m0.066s)
712. ofproto - group description (ofproto.at:614): ok     (0m0.032s 0m0.063s)
713. ofproto - group features (ofproto.at:627): ok     (0m0.031s 0m0.059s)
714. ofproto - group stats (OpenFlow 1.1) (ofproto.at:653): ok     (0m0.082s 0m0.169s)
715. ofproto - group stats (OpenFlow 1.3) (ofproto.at:677): ok     (0m0.046s 0m0.093s)
716. ofproto - group stats (OpenFlow 1.5) (ofproto.at:701): ok     (0m0.046s 0m0.094s)
717. ofproto - group add then bridge delete (OpenFlow 1.3) (ofproto.at:725): ok     (0m0.032s 0m0.059s)
718. ofproto - mod-port (OpenFlow 1.0) (ofproto.at:736): ok     (0m0.106s 0m0.231s)
719. ofproto - mod-port (OpenFlow 1.2) (ofproto.at:770): ok     (0m0.093s 0m0.203s)
720. ofproto - mod-port (OpenFlow 1.4) (ofproto.at:801): ok     (0m0.093s 0m0.202s)
721. ofproto - basic flow_mod commands (NXM) (ofproto.at:833): ok     (0m0.052s 0m0.106s)
722. ofproto - basic flow_mod commands (OpenFlow 1.0) (ofproto.at:855): ok     (0m0.052s 0m0.107s)
723. ofproto - add-flow and flags (ofproto.at:880): ok     (0m0.053s 0m0.110s)
724. ofproto - basic flow_mod commands (OpenFlow 1.1) (ofproto.at:912): ok     (0m0.053s 0m0.108s)
725. ofproto - flow_mod negative test (OpenFlow 1.1) (ofproto.at:935): ok     (0m0.073s 0m0.141s)
726. ofproto - set-field flow_mod commands (NXM) (ofproto.at:949): ok     (0m0.075s 0m0.149s)
727. ofproto - basic flow_mod commands (OpenFlow 1.2) (ofproto.at:962): ok     (0m0.105s 0m0.215s)
728. ofproto - set-field flow_mod commands (OF1.2) (ofproto.at:981): ok     (0m0.052s 0m0.101s)
729. ofproto - dump flows with cookie (ofproto.at:994): ok     (0m0.053s 0m0.107s)
730. ofproto - mod flow with cookie change (OpenFlow 1.0) (ofproto.at:1018): ok     (0m0.044s 0m0.089s)
731. ofproto - mod flow with cookie change (NXM) (ofproto.at:1034): ok     (0m0.044s 0m0.090s)
732. ofproto - no mod flow with cookie change (OpenFlow 1.1) (ofproto.at:1050): ok     (0m0.043s 0m0.088s)
733. ofproto - no mod flow with cookie change (OpenFlow 1.2) (ofproto.at:1066): ok     (0m0.044s 0m0.089s)
734. ofproto - mod flows based on cookie mask (OpenFlow 1.0) (ofproto.at:1082): ok     (0m0.047s 0m0.095s)
735. ofproto - mod flows based on cookie mask (OpenFlow 1.1) (ofproto.at:1104): ok     (0m0.047s 0m0.097s)
736. ofproto - mod flows based on cookie mask (OpenFlow 1.2) (ofproto.at:1126): ok     (0m0.047s 0m0.095s)
737. ofproto - mod flows based on cookie mask with cookie change (ofproto.at:1149): ok     (0m0.048s 0m0.096s)
738. ofproto - mod flow with cookie miss (mask==0) - NXM (ofproto.at:1171): ok     (0m0.035s 0m0.069s)
739. ofproto - mod flow with cookie miss (mask==0) - OF1.1 (ofproto.at:1181): ok     (0m0.035s 0m0.069s)
740. ofproto - mod flow with cookie miss (mask==0) - OF1.2 (ofproto.at:1191): ok     (0m0.035s 0m0.069s)
741. ofproto - mod flow with cookie miss (mask!=0) - NXM (ofproto.at:1200): ok     (0m0.036s 0m0.071s)
742. ofproto - mod flow with cookie miss (mask!=0) - OF1.1 (ofproto.at:1209): ok     (0m0.035s 0m0.069s)
743. ofproto - mod flow with cookie miss (mask!=0) - OF1.2 (ofproto.at:1218): ok     (0m0.035s 0m0.070s)
744. ofproto - del flows with cookies (ofproto.at:1227): ok     (0m0.047s 0m0.095s)
745. ofproto - del flows based on cookie (ofproto.at:1246): ok     (0m0.047s 0m0.095s)
746. ofproto - del flows based on cookie mask (ofproto.at:1267): ok     (0m0.047s 0m0.095s)
747. ofproto - del flows based on table id (NXM) (ofproto.at:1286): ok     (0m0.073s 0m0.154s)
748. ofproto - del flows based on table id (OpenFlow 1.1) (ofproto.at:1318): ok     (0m0.125s 0m0.267s)
749. ofproto - del flows based on table id (OpenFlow 1.2) (ofproto.at:1351): ok     (0m0.072s 0m0.152s)
750. ofproto - flow_mod with out_port matching (OpenFlow 1.0) (ofproto.at:1383): ok     (0m0.072s 0m0.152s)
751. ofproto - flow_mod with out_port matching (OpenFlow 1.1) (ofproto.at:1419): ok     (0m0.072s 0m0.154s)
752. ofproto - flow_mod with out_group matching (OpenFlow 1.1) (ofproto.at:1455): ok     (0m0.075s 0m0.160s)
753. ofproto - flow table configuration (OpenFlow 1.0) (ofproto.at:1497): ok     (0m0.748s 0m2.249s)
754. ofproto - hidden rules not in table stats (ofproto.at:1556): ok     (0m0.312s 0m0.909s)
755. ofproto - flow table configuration (OpenFlow 1.2) (ofproto.at:1607): ok     (0m0.588s 0m1.731s)
756. ofproto - table features (OpenFlow 1.3) (ofproto.at:1711): ok     (0m1.693s 0m3.924s)
757. ofproto - table description (OpenFlow 1.4) (ofproto.at:1922): ok     (0m0.328s 0m0.933s)
758. ofproto - hard limits on flow table size (OpenFlow 1.0) (ofproto.at:1952): ok     (0m0.069s 0m0.133s)
759. ofproto - hard limits on flow table size (OpenFlow 1.2) (ofproto.at:1996): ok     (0m0.062s 0m0.118s)
760. ofproto - eviction upon table overflow (OpenFlow 1.0) (ofproto.at:2035): ok     (0m0.080s 0m0.158s)
761. ofproto - eviction upon table overflow (OpenFlow 1.2) (ofproto.at:2093): ok     (0m0.082s 0m0.162s)
762. ofproto - eviction using importance upon table overflow (OpenFlow 1.4) (ofproto.at:2152): ok     (0m0.088s 0m0.169s)
763. ofproto - eviction upon table overflow, with fairness (OpenFlow 1.0) (ofproto.at:2216): ok     (0m0.084s 0m0.163s)
764. ofproto - eviction upon table overflow, with fairness (OpenFlow 1.2) (ofproto.at:2298): ok     (0m0.082s 0m0.157s)
765. ofproto - eviction upon table overflow, with modified hard timeout (ofproto.at:2380): ok     (0m0.059s 0m0.110s)
766. ofproto - eviction upon table overflow, with modified idle timeout (ofproto.at:2424): ok     (0m0.059s 0m0.109s)
767. ofproto - asynchronous message control (OpenFlow 1.0) (ofproto.at:2468): ok     (0m0.152s 0m0.237s)
768. ofproto - asynchronous message control (OpenFlow 1.2) (ofproto.at:2571): ok     (0m0.303s 0m0.468s)
769. ofproto - asynchronous message control (OpenFlow 1.3) (ofproto.at:2674): ok     (0m0.225s 0m0.361s)
770. ofproto - asynchronous message control (OpenFlow 1.4) (ofproto.at:2783): ok     (0m0.160s 0m0.251s)
771. ofproto - asynchronous message control (OpenFlow 1.5) (ofproto.at:2905): ok     (0m0.053s 0m0.091s)
772. ofproto - controller role (OpenFlow 1.2) (ofproto.at:2980): ok     (0m0.064s 0m0.131s)
773. ofproto - controller role (OpenFlow 1.4) (ofproto.at:3045): ok     (0m0.060s 0m0.122s)
774. ofproto - requestforward (OpenFlow 1.4) (ofproto.at:3110): ok     (0m0.056s 0m0.107s)
775. ofproto - packet-out from controller (OpenFlow 1.0) (ofproto.at:3202): ok     (0m0.041s 0m0.077s)
776. ofproto - packet-out from controller (OpenFlow 1.2) (ofproto.at:3238): ok     (0m0.038s 0m0.073s)
777. ofproto - packet-out from controller (OpenFlow 1.1) (ofproto.at:3271): ok     (0m0.039s 0m0.075s)
778. ofproto - packet-out with metadata (NXM) (ofproto.at:3302): ok     (0m0.036s 0m0.070s)
779. ofproto - packet-out with metadata (OpenFlow 1.2) (ofproto.at:3330): ok     (0m0.036s 0m0.070s)
780. ofproto - packet-out with metadata and dual set_field (OpenFlow 1.3) (ofproto.at:3358): ok     (0m0.036s 0m0.070s)
781. ofproto - packet-out with tunnel metadata (OpenFlow 1.2) (ofproto.at:3385): ok     (0m0.036s 0m0.070s)
782. ofproto - flow monitoring (ofproto.at:3433): ok     (0m0.088s 0m0.149s)
783. ofproto - flow monitoring with !own (ofproto.at:3570): ok     (0m0.045s 0m0.086s)
784. ofproto - flow monitoring with out_port (ofproto.at:3611): ok     (0m0.049s 0m0.089s)
785. ofproto - flow monitoring pause and resume (ofproto.at:3663): ok     (0m0.324s 0m0.243s)
786. ofproto - event filtering (OpenFlow 1.3) (ofproto.at:3769): ok     (0m0.033s 0m0.062s)
787. ofproto - ofport_request (ofproto.at:3803): ok     (0m2.045s 0m2.892s)
788. ofproto - bundles, open (OpenFlow 1.4) (ofproto.at:3859): ok     (0m0.034s 0m0.063s)
789. ofproto - bundles, double open (OpenFlow 1.4) (ofproto.at:3883): ok     (0m0.036s 0m0.066s)
790. ofproto - bundle close without open (OpenFlow 1.4) (ofproto.at:3915): ok     (0m0.034s 0m0.063s)
791. ofproto - bundle double close (OpenFlow 1.4) (ofproto.at:3939): ok     (0m0.038s 0m0.071s)
792. ofproto - bundle close, different flags (OpenFlow 1.4) (ofproto.at:3978): ok     (0m0.036s 0m0.066s)
793. ofproto - bundle commit without open (OpenFlow 1.4) (ofproto.at:4010): ok     (0m0.034s 0m0.063s)
794. ofproto - bundle commit, different flags (OpenFlow 1.4) (ofproto.at:4035): ok     (0m0.035s 0m0.066s)
795. ofproto - bundle discard without open (OpenFlow 1.4) (ofproto.at:4067): ok     (0m0.033s 0m0.063s)
796. ofproto - bundle with multiple flow mods (OpenFlow 1.4) (ofproto.at:4093): ok     (0m0.068s 0m0.144s)
797. ofproto - failing bundle commit (OpenFlow 1.4) (ofproto.at:4284): ok     (0m0.049s 0m0.099s)
798. dpif-netdev - dummy interface (dpif-netdev.at:23): ok     (0m0.071s 0m0.152s)
799. dpif-netdev - miss upcall key matches flow_install (dpif-netdev.at:57): ok     (0m0.154s 0m0.340s)
800. dpif-netdev - miss upcall key matches flow_dump (dpif-netdev.at:92): ok     (0m0.165s 0m0.363s)
801. dpctl - add-dp del-dp (dpctl.at:3): ok     (0m0.085s 0m0.169s)
802. dpctl - add-if set-if del-if (dpctl.at:19): ok     (0m0.149s 0m0.309s)
803. ofproto-dpif - revalidator/wait (ofproto-dpif.at:3): ok     (0m0.059s 0m0.118s)
804. ofproto-dpif - active-backup bonding (ofproto-dpif.at:9): ok     (0m0.144s 0m0.286s)
805. ofproto-dpif - balance-slb bonding (ofproto-dpif.at:56): ok     (0m0.744s 0m1.063s)
806. ofproto-dpif - balance-tcp bonding (ofproto-dpif.at:99): ok     (0m1.644s 0m2.489s)
807. ofproto-dpif - balance-tcp bonding, different recirc flow  (ofproto-dpif.at:152): ok     (0m0.054s 0m0.109s)
808. ofproto-dpif - resubmit (ofproto-dpif.at:210): ok     (0m0.036s 0m0.066s)
809. ofproto-dpif - goto table (ofproto-dpif.at:230): ok     (0m0.110s 0m0.284s)
810. ofproto-dpif - write actions (ofproto-dpif.at:244): ok     (0m0.037s 0m0.068s)
811. ofproto-dpif - modify IPv6 Neighbor Solitication (ND) (ofproto-dpif.at:261): ok     (0m0.036s 0m0.067s)
812. ofproto-dpif - clear actions (ofproto-dpif.at:280): ok     (0m0.035s 0m0.066s)
813. ofproto-dpif - group chaining (ofproto-dpif.at:296): ok     (0m0.069s 0m0.131s)
814. ofproto-dpif - all group in action list (ofproto-dpif.at:309): ok     (0m0.088s 0m0.165s)
815. ofproto-dpif - indirect group in action list (ofproto-dpif.at:324): ok     (0m0.036s 0m0.068s)
816. ofproto-dpif - group actions have no effect afterwards (ofproto-dpif.at:336): ok     (0m0.036s 0m0.068s)
817. ofproto-dpif - all group in action set (ofproto-dpif.at:348): ok     (0m0.037s 0m0.070s)
818. ofproto-dpif - indirect group in action set (ofproto-dpif.at:363): ok     (0m0.058s 0m0.109s)
819. ofproto-dpif - select group (ofproto-dpif.at:375): ok     (0m0.091s 0m0.182s)
820. ofproto-dpif - select group with watch port (ofproto-dpif.at:395): ok     (0m0.075s 0m0.143s)
821. ofproto-dpif - select group with weight (ofproto-dpif.at:407): ok     (0m0.036s 0m0.068s)
822. ofproto-dpif - select group with hash selection method (ofproto-dpif.at:419): ok     (0m0.125s 0m0.257s)
823. ofproto-dpif - fast failover group (ofproto-dpif.at:452): ok     (0m0.036s 0m0.068s)
824. ofproto-dpif - group stats single bucket (ofproto-dpif.at:464): ok     (0m0.059s 0m0.105s)
825. ofproto-dpif - group stats all buckets (ofproto-dpif.at:485): ok     (0m0.059s 0m0.106s)
826. ofproto-dpif - registers (ofproto-dpif.at:506): ok     (0m0.087s 0m0.161s)
827. ofproto-dpif - extended registers (ofproto-dpif.at:543): ok     (0m0.061s 0m0.117s)
828. ofproto-dpif - load and move order (ofproto-dpif.at:562): ok     (0m0.038s 0m0.071s)
829. ofproto-dpif - copy-field into extended registers (ofproto-dpif.at:576): ok     (0m0.036s 0m0.067s)
830. ofproto-dpif - masked set-field into metadata (ofproto-dpif.at:596): ok     (0m0.036s 0m0.066s)
831. ofproto-dpif - actset_output (ofproto-dpif.at:618): ok     (0m0.038s 0m0.070s)
832. ofproto-dpif - push-pop (ofproto-dpif.at:659): ok     (0m0.036s 0m0.067s)
833. ofproto-dpif - output (ofproto-dpif.at:678): ok     (0m0.036s 0m0.066s)
834. ofproto-dpif - dec_ttl (ofproto-dpif.at:699): ok     (0m0.050s 0m0.097s)
835. ofproto-dpif - dec_ttl without arguments at offset 32 in ofpacts (ofproto-dpif.at:743): ok     (0m0.398s 0m1.176s)
836. ofproto-dpif - dec_ttl with arguments at offset 32 in ofpacts (ofproto-dpif.at:760): ok     (0m0.337s 0m0.984s)
837. ofproto-dpif - note at offset 24 in ofpacts (ofproto-dpif.at:777): ok     (0m0.357s 0m1.003s)
838. ofproto-dpif - output, OFPP_NONE ingress port (ofproto-dpif.at:787): ok     (0m0.040s 0m0.079s)
839. ofproto-dpif - DSCP (ofproto-dpif.at:805): ok     (0m0.040s 0m0.073s)
840. ofproto-dpif - output/flood flags (ofproto-dpif.at:832): ok     (0m0.067s 0m0.140s)
841. ofproto-dpif - Default Table Miss - OF1.0 (OFPTC_TABLE_MISS_CONTROLLER) (ofproto-dpif.at:890): ok     (0m0.045s 0m0.091s)
842. ofproto-dpif - Default Table Miss - OF1.3 (OFPTC_TABLE_MISS_DROP) (ofproto-dpif.at:924): ok     (0m0.044s 0m0.090s)
843. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTROLLER (ofproto-dpif.at:952): ok     (0m0.046s 0m0.094s)
844. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTROLLER (ofproto-dpif.at:988): ok     (0m0.046s 0m0.092s)
845. ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1016): ok     (0m0.056s 0m0.115s)
846. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1075): ok     (0m0.058s 0m0.119s)
847. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1139): ok     (0m0.103s 0m0.210s)
848. ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1185): ok     (0m0.045s 0m0.090s)
849. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1213): ok     (0m0.048s 0m0.097s)
850. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1244): ok     (0m0.048s 0m0.097s)
851. ofproto-dpif - controller (ofproto-dpif.at:1275): ok     (0m0.105s 0m0.216s)
852. ofproto-dpif - MPLS handling (ofproto-dpif.at:1545): ok     (0m0.560s 0m1.247s)
853. ofproto-dpif - MPLS handling with goto_table (ofproto-dpif.at:2595): ok     (0m0.047s 0m0.102s)
854. ofproto-dpif - MPLS handling with write_actions (ofproto-dpif.at:2643): ok     (0m0.047s 0m0.101s)
855. ofproto-dpif - table-miss flow (OpenFlow 1.0) (ofproto-dpif.at:2691): ok     (0m0.046s 0m0.100s)
856. ofproto-dpif - table-miss flow (OpenFlow 1.3) (ofproto-dpif.at:2731): ok     (0m0.050s 0m0.108s)
857. ofproto-dpif - table-miss flow with async config (OpenFlow 1.3) (ofproto-dpif.at:2772): ok     (0m0.053s 0m0.113s)
858. ofproto-dpif - table-miss flow (OpenFlow 1.4) (ofproto-dpif.at:2840): ok     (0m0.050s 0m0.109s)
859. ofproto-dpif - packet-in reasons (Openflow 1.3) (ofproto-dpif.at:2882): ok     (0m0.055s 0m0.118s)
860. ofproto-dpif - packet-in reasons (Openflow 1.4) (ofproto-dpif.at:2950): ok     (0m0.052s 0m0.112s)
861. ofproto-dpif - ARP modification slow-path (ofproto-dpif.at:3018): ok     (0m0.040s 0m0.076s)
862. ofproto-dpif - VLAN handling (ofproto-dpif.at:3047): ok     (0m0.795s 0m1.906s)
863. ofproto-dpif - MPLS handling (ofproto-dpif.at:3181): ok     (0m0.063s 0m0.138s)
864. ofproto-dpif - VLAN+MPLS handling (ofproto-dpif.at:3298): ok     (0m0.151s 0m0.342s)
865. ofproto-dpif - fragment handling - trace (ofproto-dpif.at:3689): ok     (0m0.096s 0m0.222s)
866. ofproto-dpif - fragment handling - upcall (ofproto-dpif.at:3738): ok     (0m0.083s 0m0.173s)
867. ofproto-dpif - fragment handling - actions (ofproto-dpif.at:3813): ok     (0m0.118s 0m0.266s)
868. ofproto-dpif - exit (ofproto-dpif.at:3915): ok     (0m0.044s 0m0.090s)
869. ofproto-dpif - mirroring, select_all (ofproto-dpif.at:3940): ok     (0m0.042s 0m0.083s)
870. ofproto-dpif - mirroring, select_src (ofproto-dpif.at:3970): ok     (0m0.041s 0m0.082s)
871. ofproto-dpif - mirroring, OFPP_NONE ingress port (ofproto-dpif.at:3998): ok     (0m0.037s 0m0.072s)
872. ofproto-dpif - mirroring, select_dst (ofproto-dpif.at:4019): ok     (0m0.041s 0m0.082s)
873. ofproto-dpif - mirroring, select_vlan (ofproto-dpif.at:4049): ok     (0m0.045s 0m0.091s)
874. ofproto-dpif - mirroring, output_port (ofproto-dpif.at:4084): ok     (0m0.041s 0m0.082s)
875. ofproto-dpif - mirroring, output_vlan (ofproto-dpif.at:4113): ok     (0m0.050s 0m0.104s)
876. ofproto-dpif - multiple VLAN output mirrors (ofproto-dpif.at:4149): ok     (0m0.039s 0m0.077s)
877. ofproto-dpif - mirroring with recirculation (ofproto-dpif.at:4177): ok     (0m0.042s 0m0.084s)
878. ofproto-dpif - resubmit with recirculation (ofproto-dpif.at:4204): ok     (0m0.039s 0m0.080s)
879. ofproto-dpif - recirculation after resubmit (ofproto-dpif.at:4229): ok     (0m0.039s 0m0.081s)
880. ofproto-dpif - ofproto/trace command 1 (ofproto-dpif.at:4254): ok     (0m0.099s 0m0.222s)
881. ofproto-dpif - ofproto/trace command 2 (ofproto-dpif.at:4395): ok     (0m0.115s 0m0.261s)
882. ofproto-dpif - ofproto/trace from dpctl output (ofproto-dpif.at:4512): ok     (0m0.075s 0m0.170s)
883. ofproto-dpif - ofproto/trace-packet-out (ofproto-dpif.at:4559): ok     (0m0.061s 0m0.125s)
884. ofproto-dpif - MAC learning (ofproto-dpif.at:4589): ok     (0m0.099s 0m0.213s)
885. ofproto-dpif - MAC table overflow (ofproto-dpif.at:4678): ok     (0m0.146s 0m0.331s)
886. ofproto-dpif - MAC table overflow fairness (ofproto-dpif.at:4738): ok     (0m0.102s 0m0.204s)
887. ofproto-dpif - sFlow packet sampling - IPv4 collector (ofproto-dpif.at:5127): ok     (0m0.088s 0m0.180s)
888. ofproto-dpif - sFlow packet sampling - IPv6 collector (ofproto-dpif.at:5131): ok     (0m0.134s 0m0.274s)
889. ofproto-dpif - sFlow packet sampling - LACP structures (ofproto-dpif.at:5137): ok     (0m0.107s 0m0.225s)
890. ofproto-dpif - sFlow packet sampling - tunnel set (ofproto-dpif.at:5194): ok     (0m0.131s 0m0.300s)
891. ofproto-dpif - sFlow packet sampling - tunnel push (ofproto-dpif.at:5263): ok     (0m0.160s 0m0.361s)
892. ofproto-dpif - sFlow packet sampling - MPLS (ofproto-dpif.at:5361): ok     (0m0.208s 0m0.488s)
893. ofproto-dpif - NetFlow flow expiration - IPv4 collector (ofproto-dpif.at:5497): ok     (0m0.115s 0m0.240s)
894. ofproto-dpif - NetFlow flow expiration - IPv6 collector (ofproto-dpif.at:5501): ok     (0m0.138s 0m0.279s)
895. ofproto-dpif - NetFlow active expiration - IPv4 collector (ofproto-dpif.at:5581): ok     (0m0.490s 0m1.136s)
896. ofproto-dpif - NetFlow active expiration - IPv6 collector (ofproto-dpif.at:5585): ok     (0m0.442s 0m1.048s)
897. ofproto-dpif - Basic IPFIX sanity check (ofproto-dpif.at:5593): ok     (0m0.068s 0m0.148s)
898. ofproto-dpif - flow stats (ofproto-dpif.at:5627): ok     (0m0.068s 0m0.160s)
899. ofproto-dpif - flow stats, set-n-threads (ofproto-dpif.at:5648): ok     (0m0.067s 0m0.153s)
900. ofproto-dpif - idle_age and hard_age increase over time (ofproto-dpif.at:5671): ok     (0m0.164s 0m0.374s)
901. ofproto-dpif - fin_timeout (ofproto-dpif.at:5761): ok     (0m0.082s 0m0.178s)
902. ofproto-dpif - ovs-appctl dpif/dump-dps (ofproto-dpif.at:5795): ok     (0m0.035s 0m0.066s)
903. ofproto-dpif - ovs-appctl dpif/show (ofproto-dpif.at:5807): ok     (0m0.034s 0m0.065s)
904. ofproto-dpif - ovs-appctl dpif/dump-flows (ofproto-dpif.at:5825): ok     (0m0.105s 0m0.241s)
905. ofproto-dpif - ovs-appctl dpif/get-flow (ofproto-dpif.at:5858): ok     (0m0.055s 0m0.116s)
906. ofproto-dpif - MPLS actions that result in a userspace action (ofproto-dpif.at:5877): ok     (0m0.106s 0m0.236s)
907. ofproto-dpif - MPLS actions that result in a drop (ofproto-dpif.at:5913): ok     (0m0.083s 0m0.185s)
908. ofproto-dpif - patch ports (ofproto-dpif.at:5951): ok     (0m0.249s 0m0.561s)
909. ofproto-dpif - patch ports - stack (ofproto-dpif.at:6026): ok     (0m0.062s 0m0.134s)
910. ofproto-dpif - port duration (ofproto-dpif.at:6075): ok     (0m0.037s 0m0.074s)
911. ofproto-dpif megaflow - port classification (ofproto-dpif.at:6095): ok     (0m0.073s 0m0.164s)
912. ofproto-dpif megaflow - L2 classification (ofproto-dpif.at:6113): ok     (0m0.089s 0m0.196s)
913. ofproto-dpif megaflow - L3 classification (ofproto-dpif.at:6131): ok     (0m0.120s 0m0.253s)
914. ofproto-dpif megaflow - IPv6 classification (ofproto-dpif.at:6150): ok     (0m0.088s 0m0.193s)
915. ofproto-dpif megaflow - L4 classification (ofproto-dpif.at:6169): ok     (0m0.113s 0m0.245s)
916. ofproto-dpif megaflow - normal (ofproto-dpif.at:6187): ok     (0m0.103s 0m0.225s)
917. ofproto-dpif megaflow - mpls (ofproto-dpif.at:6202): ok     (0m0.101s 0m0.222s)
918. ofproto-dpif megaflow - netflow - IPv4 collector (ofproto-dpif.at:6247): ok     (0m0.122s 0m0.262s)
919. ofproto-dpif megaflow - netflow - IPv6 collector (ofproto-dpif.at:6251): ok     (0m0.095s 0m0.206s)
920. ofproto-dpif megaflow - normal, active-backup bonding (ofproto-dpif.at:6256): ok     (0m0.112s 0m0.248s)
921. ofproto-dpif megaflow - normal, balance-slb bonding (ofproto-dpif.at:6277): ok     (0m0.104s 0m0.232s)
922. ofproto-dpif megaflow - normal, balance-tcp bonding (ofproto-dpif.at:6298): ok     (0m0.120s 0m0.256s)
923. ofproto-dpif megaflow - resubmit port action (ofproto-dpif.at:6336): ok     (0m0.108s 0m0.233s)
924. ofproto-dpif megaflow - resubmit table action (ofproto-dpif.at:6355): ok     (0m0.113s 0m0.243s)
925. ofproto-dpif megaflow - goto_table action (ofproto-dpif.at:6375): ok     (0m0.095s 0m0.210s)
926. ofproto-dpif megaflow - mirroring, select_all (ofproto-dpif.at:6394): ok     (0m0.119s 0m0.250s)
927. ofproto-dpif megaflow - mirroring, select_vlan (ofproto-dpif.at:6417): ok     (0m0.091s 0m0.198s)
928. ofproto-dpif megaflow - move action (ofproto-dpif.at:6440): ok     (0m0.112s 0m0.242s)
929. ofproto-dpif megaflow - push action (ofproto-dpif.at:6460): ok     (0m0.086s 0m0.188s)
930. ofproto-dpif megaflow - learning (ofproto-dpif.at:6478): ok     (0m0.121s 0m0.261s)
931. ofproto-dpif megaflow - tunnels (ofproto-dpif.at:6505): ok     (0m0.129s 0m0.272s)
932. ofproto-dpif megaflow - dec_ttl (ofproto-dpif.at:6538): ok     (0m0.091s 0m0.196s)
933. ofproto-dpif megaflow - set dl_dst (ofproto-dpif.at:6557): ok     (0m0.108s 0m0.230s)
934. ofproto-dpif megaflow - disabled (ofproto-dpif.at:6578): ok     (0m0.153s 0m0.347s)
935. ofproto-dpif - datapath port number change (ofproto-dpif.at:6611): ok     (0m0.048s 0m0.097s)
936. ofproto - bundle with variable bfd/cfm config (ofproto-dpif.at:6633): ok     (0m0.134s 0m0.284s)
937. ofproto-dpif - ofproto-dpif-monitor 1 (ofproto-dpif.at:6711): ok     (0m0.123s 0m0.235s)
938. ofproto-dpif - ofproto-dpif-monitor 2 (ofproto-dpif.at:6758): ok     (0m1.736s 0m1.765s)
939. ofproto-dpif - infinite resubmit (ofproto-dpif.at:6771): ok     (0m0.035s 0m0.073s)
940. ofproto-dpif - exponential resubmit chain (ofproto-dpif.at:6785): ok     (0m0.690s 0m0.855s)
941. ofproto-dpif - too many output actions (ofproto-dpif.at:6803): ok     (0m0.545s 0m0.458s)
942. ofproto-dpif - stack too deep (ofproto-dpif.at:6821): ok     (0m0.068s 0m0.177s)
943. ofproto-dpif packet-out controller (ofproto-dpif.at:6841): ok     (0m0.317s 0m1.053s)
944. ofproto-dpif packet-out controller (patch port) (ofproto-dpif.at:6886): ok     (0m0.655s 0m2.257s)
945. ofproto-dpif packet-out goto_table (ofproto-dpif.at:6942): ok     (0m0.324s 0m1.073s)
946. ofproto-dpif packet-out table-miss (continue) (ofproto-dpif.at:6996): ok     (0m0.335s 0m1.119s)
947. ofproto-dpif - ICMPv6 (ofproto-dpif.at:7047): ok     (0m0.039s 0m0.079s)
948. ofproto-dpif - Neighbor Discovery set-field with checksum update (ofproto-dpif.at:7067): ok     (0m0.065s 0m0.133s)
949. ofproto-dpif - vlan matching (ofproto-dpif.at:7089): ok     (0m0.045s 0m0.101s)
950. ofproto-dpif - in place modification (ofproto-dpif.at:7107): ok     (0m0.060s 0m0.130s)
951. ofproto-dpif - in place modification (vlan) (ofproto-dpif.at:7147): ok     (0m0.083s 0m0.182s)
952. bridge - ports that disappear get added back (bridge.at:7): ok     (0m0.035s 0m0.069s)
953. VLAN splinters (vlan-splinters.at:3): ok     (0m0.061s 0m0.129s)
954. create empty, reread (ovsdb-log.at:3): ok     (0m0.007s 0m0.015s)
955. write one, reread (ovsdb-log.at:18): ok     (0m0.007s 0m0.014s)
956. check that create fails if file exists (ovsdb-log.at:35): ok     (0m0.009s 0m0.020s)
957. write one, reread (ovsdb-log.at:55): ok     (0m0.007s 0m0.014s)
958. write one, reread, append (ovsdb-log.at:76): ok     (0m0.009s 0m0.021s)
959. write, reread one, overwrite (ovsdb-log.at:106): ok     (0m0.009s 0m0.020s)
960. write, add corrupted data, read (ovsdb-log.at:132): ok     (0m0.007s 0m0.015s)
961. write, add corrupted data, read, overwrite (ovsdb-log.at:154): ok     (0m0.010s 0m0.021s)
962. write, corrupt some data, read, overwrite (ovsdb-log.at:186): ok     (0m0.014s 0m0.031s)
963. write, truncate file, read, overwrite (ovsdb-log.at:219): ok     (0m0.014s 0m0.031s)
964. write bad JSON, read, overwrite (ovsdb-log.at:252): ok     (0m0.010s 0m0.021s)
965. integer - C (ovsdb-types.at:3): ok     (0m0.003s 0m0.006s)
966. integer - Python (ovsdb-types.at:3): ok     (0m0.069s 0m0.031s)
967. real - C (ovsdb-types.at:5): ok     (0m0.003s 0m0.006s)
968. real - Python (ovsdb-types.at:5): ok     (0m0.069s 0m0.030s)
969. boolean - C (ovsdb-types.at:7): ok     (0m0.003s 0m0.006s)
970. boolean - Python (ovsdb-types.at:7): ok     (0m0.076s 0m0.032s)
971. string - C (ovsdb-types.at:9): ok     (0m0.003s 0m0.006s)
972. string - Python (ovsdb-types.at:9): ok     (0m0.069s 0m0.031s)
973. uuid - C (ovsdb-types.at:11): ok     (0m0.003s 0m0.006s)
974. uuid - Python (ovsdb-types.at:11): ok     (0m0.068s 0m0.031s)
975. void is not a valid atomic-type - C (ovsdb-types.at:13): ok     (0m0.004s 0m0.010s)
976. void is not a valid atomic-type - Python (ovsdb-types.at:13): ok     (0m0.071s 0m0.035s)
977. integer enum - C (ovsdb-types.at:18): ok     (0m0.003s 0m0.006s)
978. integer enum - Python (ovsdb-types.at:18): ok     (0m0.069s 0m0.031s)
979. integer >= 5 - C (ovsdb-types.at:21): ok     (0m0.003s 0m0.006s)
980. integer >= 5 - Python (ovsdb-types.at:21): ok     (0m0.069s 0m0.031s)
981. integer <= 7 - C (ovsdb-types.at:24): ok     (0m0.003s 0m0.006s)
982. integer <= 7 - Python (ovsdb-types.at:24): ok     (0m0.069s 0m0.031s)
983. integer between -5 and 10 - C (ovsdb-types.at:27): ok     (0m0.003s 0m0.006s)
984. integer between -5 and 10 - Python (ovsdb-types.at:27): ok     (0m0.069s 0m0.030s)
985. integer max may not be less than min - C (ovsdb-types.at:30): ok     (0m0.005s 0m0.011s)
986. integer max may not be less than min - Python (ovsdb-types.at:30): ok     (0m0.070s 0m0.035s)
987. real enum - C (ovsdb-types.at:34): ok     (0m0.003s 0m0.006s)
988. real enum - Python (ovsdb-types.at:34): ok     (0m0.074s 0m0.032s)
989. real >= -1.5 - C (ovsdb-types.at:37): ok     (0m0.003s 0m0.007s)
990. real >= -1.5 - Python (ovsdb-types.at:37): ok     (0m0.077s 0m0.034s)
991. real <= 1e5 - C (ovsdb-types.at:40): ok     (0m0.003s 0m0.007s)
992. real <= 1e5 - Python (ovsdb-types.at:40): ok     (0m0.074s 0m0.033s)
993. real between -2.5 and 3.75 - C (ovsdb-types.at:43): ok     (0m0.003s 0m0.006s)
994. real between -2.5 and 3.75 - Python (ovsdb-types.at:43): ok     (0m0.069s 0m0.031s)
995. real max may not be less than min - C (ovsdb-types.at:46): ok     (0m0.004s 0m0.010s)
996. real max may not be less than min - Python (ovsdb-types.at:46): ok     (0m0.089s 0m0.044s)
997. boolean - C (ovsdb-types.at:50): ok     (0m0.003s 0m0.008s)
998. boolean - Python (ovsdb-types.at:50): ok     (0m0.086s 0m0.038s)
999. boolean enum - C (ovsdb-types.at:52): ok     (0m0.003s 0m0.006s)
1000. boolean enum - Python (ovsdb-types.at:52): ok     (0m0.069s 0m0.031s)
1001. string enum - C (ovsdb-types.at:56): ok     (0m0.003s 0m0.006s)
1002. string enum - Python (ovsdb-types.at:56): ok     (0m0.070s 0m0.034s)
1003. string minLength - C (ovsdb-types.at:59): ok     (0m0.005s 0m0.012s)
1004. string minLength - Python (ovsdb-types.at:59): ok     (0m0.132s 0m0.056s)
1005. string maxLength - C (ovsdb-types.at:62): ok     (0m0.003s 0m0.006s)
1006. string maxLength - Python (ovsdb-types.at:62): ok     (0m0.077s 0m0.032s)
1007. string minLength and maxLength - C (ovsdb-types.at:65): ok     (0m0.003s 0m0.006s)
1008. string minLength and maxLength - Python (ovsdb-types.at:65): ok     (0m0.088s 0m0.038s)
1009. maxLength must not be less than minLength - C (ovsdb-types.at:68): ok     (0m0.011s 0m0.025s)
1010. maxLength must not be less than minLength - Python (ovsdb-types.at:68): ok     (0m0.096s 0m0.053s)
1011. maxLength must not be negative - C (ovsdb-types.at:71): ok     (0m0.004s 0m0.010s)
1012. maxLength must not be negative - Python (ovsdb-types.at:71): ok     (0m0.071s 0m0.035s)
1013. uuid enum - C (ovsdb-types.at:75): ok     (0m0.003s 0m0.006s)
1014. uuid enum - Python (ovsdb-types.at:75): ok     (0m0.069s 0m0.031s)
1015. uuid refTable - C (ovsdb-types.at:78): ok     (0m0.003s 0m0.006s)
1016. uuid refTable - Python (ovsdb-types.at:78): ok     (0m0.069s 0m0.031s)
1017. uuid refTable must be valid id - C (ovsdb-types.at:81): ok     (0m0.004s 0m0.010s)
1018. uuid refTable must be valid id - Python (ovsdb-types.at:81): ok     (0m0.073s 0m0.036s)
1019. void is not a valid base-type - C (ovsdb-types.at:85): ok     (0m0.005s 0m0.011s)
1020. void is not a valid base-type - Python (ovsdb-types.at:85): ok     (0m0.071s 0m0.035s)
1021. "type" member must be present - C (ovsdb-types.at:87): ok     (0m0.004s 0m0.010s)
1022. "type" member must be present - Python (ovsdb-types.at:87): ok     (0m0.070s 0m0.035s)
1023. simple integer - C (ovsdb-types.at:92): ok     (0m0.003s 0m0.006s)
1024. simple integer - Python (ovsdb-types.at:92): ok     (0m0.069s 0m0.031s)
1025. simple real - C (ovsdb-types.at:94): ok     (0m0.003s 0m0.006s)
1026. simple real - Python (ovsdb-types.at:94): ok     (0m0.072s 0m0.034s)
1027. simple boolean - C (ovsdb-types.at:96): ok     (0m0.003s 0m0.006s)
1028. simple boolean - Python (ovsdb-types.at:96): ok     (0m0.069s 0m0.031s)
1029. simple string - C (ovsdb-types.at:98): ok     (0m0.003s 0m0.006s)
1030. simple string - Python (ovsdb-types.at:98): ok     (0m0.074s 0m0.033s)
1031. simple uuid - C (ovsdb-types.at:100): ok     (0m0.003s 0m0.006s)
1032. simple uuid - Python (ovsdb-types.at:100): ok     (0m0.074s 0m0.033s)
1033. integer in object - C (ovsdb-types.at:102): ok     (0m0.003s 0m0.006s)
1034. integer in object - Python (ovsdb-types.at:102): ok     (0m0.069s 0m0.030s)
1035. real in object with explicit min and max - C (ovsdb-types.at:104): ok     (0m0.003s 0m0.006s)
1036. real in object with explicit min and max - Python (ovsdb-types.at:104): ok     (0m0.069s 0m0.031s)
1037. key type is required - C (ovsdb-types.at:107): ok     (0m0.004s 0m0.010s)
1038. key type is required - Python (ovsdb-types.at:107): ok     (0m0.070s 0m0.035s)
1039. void is not a valid type - C (ovsdb-types.at:109): ok     (0m0.004s 0m0.010s)
1040. void is not a valid type - Python (ovsdb-types.at:109): ok     (0m0.071s 0m0.035s)
1041. optional boolean - C (ovsdb-types.at:114): ok     (0m0.003s 0m0.006s)
1042. optional boolean - Python (ovsdb-types.at:114): ok     (0m0.073s 0m0.032s)
1043. set of 1 to 3 uuids - C (ovsdb-types.at:118): ok     (0m0.003s 0m0.006s)
1044. set of 1 to 3 uuids - Python (ovsdb-types.at:118): ok     (0m0.094s 0m0.038s)
1045. set of 0 to 3 strings - C (ovsdb-types.at:121): ok     (0m0.006s 0m0.014s)
1046. set of 0 to 3 strings - Python (ovsdb-types.at:121): ok     (0m0.096s 0m0.053s)
1047. set of 0 or more integers - C (ovsdb-types.at:124): ok     (0m0.003s 0m0.006s)
1048. set of 0 or more integers - Python (ovsdb-types.at:124): ok     (0m0.069s 0m0.031s)
1049. set of 1 or more reals - C (ovsdb-types.at:127): ok     (0m0.003s 0m0.006s)
1050. set of 1 or more reals - Python (ovsdb-types.at:127): ok     (0m0.069s 0m0.031s)
1051. set max cannot be less than min - C (ovsdb-types.at:131): ok     (0m0.004s 0m0.010s)
1052. set max cannot be less than min - Python (ovsdb-types.at:131): ok     (0m0.070s 0m0.035s)
1053. set max cannot be negative - C (ovsdb-types.at:134): ok     (0m0.004s 0m0.010s)
1054. set max cannot be negative - Python (ovsdb-types.at:134): ok     (0m0.071s 0m0.036s)
1055. set min cannot be negative - C (ovsdb-types.at:137): ok     (0m0.005s 0m0.010s)
1056. set min cannot be negative - Python (ovsdb-types.at:137): ok     (0m0.070s 0m0.035s)
1057. set min cannot be greater than one - C (ovsdb-types.at:140): ok     (0m0.004s 0m0.010s)
1058. set min cannot be greater than one - Python (ovsdb-types.at:140): ok     (0m0.081s 0m0.040s)
1059. map of 1 integer to boolean - C (ovsdb-types.at:146): ok     (0m0.003s 0m0.007s)
1060. map of 1 integer to boolean - Python (ovsdb-types.at:146): ok     (0m0.080s 0m0.035s)
1061. map of 1 boolean to integer, explicit min and max - C (ovsdb-types.at:149): ok     (0m0.003s 0m0.006s)
1062. map of 1 boolean to integer, explicit min and max - Python (ovsdb-types.at:149): ok     (0m0.070s 0m0.032s)
1063. map of 1 to 5 uuid to real - C (ovsdb-types.at:152): ok     (0m0.003s 0m0.006s)
1064. map of 1 to 5 uuid to real - Python (ovsdb-types.at:152): ok     (0m0.069s 0m0.031s)
1065. map of 0 to 10 string to uuid - C (ovsdb-types.at:155): ok     (0m0.003s 0m0.007s)
1066. map of 0 to 10 string to uuid - Python (ovsdb-types.at:155): ok     (0m0.077s 0m0.034s)
1067. map of 1 to 20 real to string - C (ovsdb-types.at:158): ok     (0m0.003s 0m0.007s)
1068. map of 1 to 20 real to string - Python (ovsdb-types.at:158): ok     (0m0.074s 0m0.033s)
1069. map of 0 or more string to real - C (ovsdb-types.at:161): ok     (0m0.003s 0m0.006s)
1070. map of 0 or more string to real - Python (ovsdb-types.at:161): ok     (0m0.069s 0m0.031s)
1071. map key type is required - C (ovsdb-types.at:165): ok     (0m0.004s 0m0.010s)
1072. map key type is required - Python (ovsdb-types.at:165): ok     (0m0.071s 0m0.036s)
1073. default atoms - C (ovsdb-data.at:3): ok     (0m0.003s 0m0.006s)
1074. default atoms - Python (ovsdb-data.at:3): ok     (0m0.070s 0m0.031s)
1075. default data - C (ovsdb-data.at:11): ok     (0m0.003s 0m0.006s)
1076. default data - Python (ovsdb-data.at:11): ok     (0m0.071s 0m0.031s)
1077. integer atom from JSON - C (ovsdb-data.at:76): ok     (0m0.003s 0m0.006s)
1078. integer atom from JSON - Python (ovsdb-data.at:76): ok     (0m0.075s 0m0.032s)
1079. integer atom from string (ovsdb-data.at:89): ok     (0m0.003s 0m0.006s)
1080. real atom from JSON - C (ovsdb-data.at:102): ok     (0m0.003s 0m0.006s)
1081. real atom from JSON - Python (ovsdb-data.at:102): ok     (0m0.168s 0m0.074s)
1082. real atom from string (ovsdb-data.at:119): ok     (0m0.006s 0m0.014s)
1083. boolean atom from JSON - C (ovsdb-data.at:136): ok     (0m0.006s 0m0.013s)
1084. boolean atom from JSON - Python (ovsdb-data.at:136): ok     (0m0.097s 0m0.053s)
1085. boolean atom from string (ovsdb-data.at:141): ok     (0m0.003s 0m0.006s)
1086. string atom from JSON - C (ovsdb-data.at:146): ok     (0m0.003s 0m0.006s)
1087. string atom from JSON - Python (ovsdb-data.at:146): ok     (0m0.069s 0m0.031s)
1088. string atom from string (ovsdb-data.at:152): ok     (0m0.003s 0m0.006s)
1089. uuid atom from JSON - C (ovsdb-data.at:167): ok     (0m0.003s 0m0.006s)
1090. uuid atom from JSON - Python (ovsdb-data.at:167): ok     (0m0.072s 0m0.033s)
1091. uuid atom from string (ovsdb-data.at:171): ok     (0m0.003s 0m0.006s)
1092. integer atom sorting - C (ovsdb-data.at:175): ok     (0m0.003s 0m0.006s)
1093. integer atom sorting - Python (ovsdb-data.at:175): ok     (0m0.070s 0m0.031s)
1094. real atom sorting - C (ovsdb-data.at:179): ok     (0m0.003s 0m0.006s)
1095. real atom sorting - Python (ovsdb-data.at:179): ok     (0m0.069s 0m0.031s)
1096. boolean atom sorting - C (ovsdb-data.at:183): ok     (0m0.003s 0m0.006s)
1097. boolean atom sorting - Python (ovsdb-data.at:183): ok     (0m0.125s 0m0.045s)
1098. string atom sorting - C (ovsdb-data.at:187): ok     (0m0.007s 0m0.015s)
1099. string atom sorting - Python (ovsdb-data.at:187): ok     (0m0.167s 0m0.073s)
1100. uuid atom sorting - C (ovsdb-data.at:191): ok     (0m0.007s 0m0.015s)
1101. uuid atom sorting - Python (ovsdb-data.at:191): ok     (0m0.074s 0m0.031s)
1102. real not acceptable integer JSON atom - C (ovsdb-data.at:228): ok     (0m0.003s 0m0.006s)
1103. real not acceptable integer JSON atom - Python (ovsdb-data.at:228): ok     (0m0.069s 0m0.031s)
1104. no invalid UTF-8 sequences in strings (ovsdb-data.at:234): ok     (0m0.003s 0m0.006s)
1105. no invalid UTF-8 sequences in strings - Python (ovsdb-data.at:249): ok     (0m0.070s 0m0.032s)
1106. real not acceptable integer string atom (ovsdb-data.at:257): ok     (0m0.004s 0m0.010s)
1107. string "true" not acceptable boolean JSON atom - C (ovsdb-data.at:261): ok     (0m0.003s 0m0.006s)
1108. string "true" not acceptable boolean JSON atom - Python (ovsdb-data.at:261): ok     (0m0.069s 0m0.031s)
1109. string "true" not acceptable boolean string atom (ovsdb-data.at:265): ok     (0m0.004s 0m0.010s)
1110. integer not acceptable string JSON atom - C (ovsdb-data.at:269): ok     (0m0.003s 0m0.006s)
1111. integer not acceptable string JSON atom - Python (ovsdb-data.at:269): ok     (0m0.071s 0m0.032s)
1112. uuid atom must be expressed as JSON array - C (ovsdb-data.at:273): ok     (0m0.003s 0m0.006s)
1113. uuid atom must be expressed as JSON array - Python (ovsdb-data.at:273): ok     (0m0.159s 0m0.065s)
1114. named-uuid requires symbol table - C (ovsdb-data.at:277): ok     (0m0.006s 0m0.015s)
1115. named-uuid requires symbol table - Python (ovsdb-data.at:277): ok     (0m0.069s 0m0.031s)
1116. empty string atom must be quoted (ovsdb-data.at:281): ok     (0m0.004s 0m0.010s)
1117. quotes must be balanced (ovsdb-data.at:285): ok     (0m0.004s 0m0.010s)
1118. quoted string must not contain unescaped quote (ovsdb-data.at:289): ok     (0m0.004s 0m0.010s)
1119. quoted string must not end with backslash (ovsdb-data.at:293): ok     (0m0.004s 0m0.010s)
1120. uuids must be valid (ovsdb-data.at:297): ok     (0m0.004s 0m0.010s)
1121. integer atom enum - C (ovsdb-data.at:303): ok     (0m0.003s 0m0.007s)
1122. integer atom enum - Python (ovsdb-data.at:303): ok     (0m0.070s 0m0.031s)
1123. real atom enum - C (ovsdb-data.at:326): ok     (0m0.003s 0m0.006s)
1124. real atom enum - Python (ovsdb-data.at:326): ok     (0m0.070s 0m0.031s)
1125. boolean atom enum - C (ovsdb-data.at:343): ok     (0m0.003s 0m0.007s)
1126. boolean atom enum - Python (ovsdb-data.at:343): ok     (0m0.069s 0m0.031s)
1127. string atom enum - C (ovsdb-data.at:350): ok     (0m0.003s 0m0.006s)
1128. string atom enum - Python (ovsdb-data.at:350): ok     (0m0.070s 0m0.031s)
1129. uuid atom enum - C (ovsdb-data.at:365): ok     (0m0.003s 0m0.006s)
1130. uuid atom enum - Python (ovsdb-data.at:365): ok     (0m0.070s 0m0.031s)
1131. integers >= 5 - C (ovsdb-data.at:376): ok     (0m0.003s 0m0.006s)
1132. integers >= 5 - Python (ovsdb-data.at:376): ok     (0m0.070s 0m0.031s)
1133. integers <= -1 - C (ovsdb-data.at:389): ok     (0m0.003s 0m0.006s)
1134. integers <= -1 - Python (ovsdb-data.at:389): ok     (0m0.071s 0m0.032s)
1135. integers in range -10 to 10 - C (ovsdb-data.at:400): ok     (0m0.003s 0m0.006s)
1136. integers in range -10 to 10 - Python (ovsdb-data.at:400): ok     (0m0.070s 0m0.031s)
1137. reals >= 5 - C (ovsdb-data.at:421): ok     (0m0.003s 0m0.006s)
1138. reals >= 5 - Python (ovsdb-data.at:421): ok     (0m0.069s 0m0.031s)
1139. reals <= -1 - C (ovsdb-data.at:434): ok     (0m0.003s 0m0.006s)
1140. reals <= -1 - Python (ovsdb-data.at:434): ok     (0m0.069s 0m0.031s)
1141. reals in range -10 to 10 - C (ovsdb-data.at:445): ok     (0m0.003s 0m0.006s)
1142. reals in range -10 to 10 - Python (ovsdb-data.at:445): ok     (0m0.070s 0m0.031s)
1143. strings at least 2 characters long - C (ovsdb-data.at:466): ok     (0m0.003s 0m0.006s)
1144. strings at least 2 characters long - Python (ovsdb-data.at:466): ok     (0m0.085s 0m0.043s)
1145. strings no more than 2 characters long - C (ovsdb-data.at:484): ok     (0m0.003s 0m0.006s)
1146. strings no more than 2 characters long - Python (ovsdb-data.at:484): ok     (0m0.070s 0m0.031s)
1147. integer JSON datum - C (ovsdb-data.at:499): ok     (0m0.003s 0m0.006s)
1148. integer JSON datum - Python (ovsdb-data.at:499): ok     (0m0.069s 0m0.031s)
1149. integer string datum (ovsdb-data.at:505): ok     (0m0.003s 0m0.006s)
1150. real JSON datum - C (ovsdb-data.at:512): ok     (0m0.003s 0m0.006s)
1151. real JSON datum - Python (ovsdb-data.at:512): ok     (0m0.077s 0m0.037s)
1152. real string datum (ovsdb-data.at:518): ok     (0m0.007s 0m0.015s)
1153. boolean JSON datum - C (ovsdb-data.at:524): ok     (0m0.006s 0m0.014s)
1154. boolean JSON datum - Python (ovsdb-data.at:524): ok     (0m0.069s 0m0.031s)
1155. boolean string datum (ovsdb-data.at:529): ok     (0m0.003s 0m0.006s)
1156. string JSON datum - C (ovsdb-data.at:534): ok     (0m0.003s 0m0.006s)
1157. string JSON datum - Python (ovsdb-data.at:534): ok     (0m0.069s 0m0.031s)
1158. string string datum (ovsdb-data.at:540): ok     (0m0.003s 0m0.006s)
1159. JSON optional boolean - C (ovsdb-data.at:549): ok     (0m0.003s 0m0.006s)
1160. JSON optional boolean - Python (ovsdb-data.at:549): ok     (0m0.069s 0m0.031s)
1161. string optional boolean (ovsdb-data.at:559): ok     (0m0.003s 0m0.006s)
1162. JSON set of 0 or more integers - C (ovsdb-data.at:569): ok     (0m0.003s 0m0.006s)
1163. JSON set of 0 or more integers - Python (ovsdb-data.at:569): ok     (0m0.071s 0m0.031s)
1164. string set of 0 or more integers (ovsdb-data.at:586): ok     (0m0.003s 0m0.007s)
1165. JSON set of 1 to 3 uuids - C (ovsdb-data.at:601): ok     (0m0.003s 0m0.006s)
1166. JSON set of 1 to 3 uuids - Python (ovsdb-data.at:601): ok     (0m0.070s 0m0.031s)
1167. string set of 1 to 3 uuids (ovsdb-data.at:612): ok     (0m0.003s 0m0.006s)
1168. JSON set of 0 to 3 strings - C (ovsdb-data.at:621): ok     (0m0.003s 0m0.006s)
1169. JSON set of 0 to 3 strings - Python (ovsdb-data.at:621): ok     (0m0.070s 0m0.031s)
1170. string set of 0 to 3 strings (ovsdb-data.at:634): ok     (0m0.003s 0m0.006s)
1171. duplicate boolean not allowed in JSON set - C (ovsdb-data.at:645): ok     (0m0.004s 0m0.010s)
1172. duplicate boolean not allowed in JSON set - Python (ovsdb-data.at:645): ok     (0m0.070s 0m0.035s)
1173. duplicate boolean not allowed in string set (ovsdb-data.at:649): ok     (0m0.005s 0m0.012s)
1174. duplicate integer not allowed in JSON set - C (ovsdb-data.at:653): ok     (0m0.004s 0m0.010s)
1175. duplicate integer not allowed in JSON set - Python (ovsdb-data.at:653): ok     (0m0.071s 0m0.035s)
1176. duplicate integer not allowed in string set (ovsdb-data.at:657): ok     (0m0.004s 0m0.010s)
1177. duplicate real not allowed in JSON set - C (ovsdb-data.at:661): ok     (0m0.004s 0m0.010s)
1178. duplicate real not allowed in JSON set - Python (ovsdb-data.at:661): ok     (0m0.070s 0m0.035s)
1179. duplicate real not allowed in string set (ovsdb-data.at:665): ok     (0m0.004s 0m0.010s)
1180. duplicate string not allowed in JSON set - C (ovsdb-data.at:669): ok     (0m0.004s 0m0.010s)
1181. duplicate string not allowed in JSON set - Python (ovsdb-data.at:669): ok     (0m0.070s 0m0.035s)
1182. duplicate string not allowed in string set (ovsdb-data.at:673): ok     (0m0.004s 0m0.010s)
1183. duplicate uuid not allowed in JSON set - C (ovsdb-data.at:677): ok     (0m0.004s 0m0.010s)
1184. duplicate uuid not allowed in JSON set - Python (ovsdb-data.at:677): ok     (0m0.071s 0m0.036s)
1185. duplicate uuid not allowed in string set (ovsdb-data.at:684): ok     (0m0.005s 0m0.011s)
1186. JSON map of 1 integer to boolean - C (ovsdb-data.at:693): ok     (0m0.003s 0m0.006s)
1187. JSON map of 1 integer to boolean - Python (ovsdb-data.at:693): ok     (0m0.069s 0m0.031s)
1188. string map of 1 integer to boolean (ovsdb-data.at:698): ok     (0m0.003s 0m0.006s)
1189. JSON map of at least 1 integer to boolean - C (ovsdb-data.at:703): ok     (0m0.003s 0m0.006s)
1190. JSON map of at least 1 integer to boolean - Python (ovsdb-data.at:703): ok     (0m0.070s 0m0.031s)
1191. string map of at least 1 integer to boolean (ovsdb-data.at:712): ok     (0m0.003s 0m0.006s)
1192. JSON map of 1 boolean to integer - C (ovsdb-data.at:721): ok     (0m0.003s 0m0.006s)
1193. JSON map of 1 boolean to integer - Python (ovsdb-data.at:721): ok     (0m0.069s 0m0.031s)
1194. string map of 1 boolean to integer (ovsdb-data.at:726): ok     (0m0.003s 0m0.006s)
1195. JSON map of 1 uuid to real - C (ovsdb-data.at:731): ok     (0m0.003s 0m0.006s)
1196. JSON map of 1 uuid to real - Python (ovsdb-data.at:731): ok     (0m0.070s 0m0.031s)
1197. string map of 1 uuid to real (ovsdb-data.at:740): ok     (0m0.003s 0m0.006s)
1198. JSON map of 10 string to string - C (ovsdb-data.at:749): ok     (0m0.003s 0m0.006s)
1199. JSON map of 10 string to string - Python (ovsdb-data.at:749): ok     (0m0.070s 0m0.031s)
1200. string map of 10 string to string (ovsdb-data.at:763): ok     (0m0.003s 0m0.006s)
1201. duplicate integer key not allowed in JSON map - C (ovsdb-data.at:777): ok     (0m0.005s 0m0.010s)
1202. duplicate integer key not allowed in JSON map - Python (ovsdb-data.at:777): ok     (0m0.071s 0m0.035s)
1203. duplicate integer key not allowed in string map (ovsdb-data.at:782): ok     (0m0.004s 0m0.010s)
1204. ordinary column - C (ovsdb-column.at:3): ok     (0m0.003s 0m0.006s)
1205. ordinary column - Python (ovsdb-column.at:3): ok     (0m0.069s 0m0.031s)
1206. immutable column - C (ovsdb-column.at:7): ok     (0m0.003s 0m0.006s)
1207. immutable column - Python (ovsdb-column.at:7): ok     (0m0.072s 0m0.032s)
1208. ephemeral column - C (ovsdb-column.at:11): ok     (0m0.003s 0m0.006s)
1209. ephemeral column - Python (ovsdb-column.at:11): ok     (0m0.069s 0m0.031s)
1210. non-root table with one column - C (ovsdb-table.at:3): ok     (0m0.003s 0m0.006s)
1211. non-root table with one column - Python (ovsdb-table.at:3): ok     (0m0.069s 0m0.031s)
1212. immutable table with one column - C (ovsdb-table.at:7): ok     (0m0.003s 0m0.006s)
1213. immutable table with one column - Python (ovsdb-table.at:7): ok     (0m0.074s 0m0.036s)
1214. root table with one column - C (ovsdb-table.at:13): ok     (0m0.007s 0m0.015s)
1215. root table with one column - Python (ovsdb-table.at:13): ok     (0m0.166s 0m0.073s)
1216. non-root table with default_is_root=true - C (ovsdb-table.at:19): ok     (0m0.007s 0m0.015s)
1217. non-root table with default_is_root=true - Python (ovsdb-table.at:19): ok     (0m0.070s 0m0.033s)
1218. root table with default_is_root=true - C (ovsdb-table.at:23): ok     (0m0.003s 0m0.006s)
1219. root table with default_is_root=true - Python (ovsdb-table.at:23): ok     (0m0.069s 0m0.031s)
1220. table with maxRows of 2 - C (ovsdb-table.at:29): ok     (0m0.003s 0m0.006s)
1221. table with maxRows of 2 - Python (ovsdb-table.at:29): ok     (0m0.069s 0m0.032s)
1222. table with index - C (ovsdb-table.at:34): ok     (0m0.003s 0m0.006s)
1223. table with index - Python (ovsdb-table.at:34): ok     (0m0.069s 0m0.031s)
1224. table with syntax error in index - C (ovsdb-table.at:40): ok     (0m0.004s 0m0.010s)
1225. table with syntax error in index - Python (ovsdb-table.at:40): ok     (0m0.071s 0m0.035s)
1226. table with empty index - C (ovsdb-table.at:46): ok     (0m0.004s 0m0.010s)
1227. table with empty index - Python (ovsdb-table.at:46): ok     (0m0.073s 0m0.037s)
1228. table with index of ephemeral column - C (ovsdb-table.at:52): ok     (0m0.005s 0m0.012s)
1229. table with index of ephemeral column - Python (ovsdb-table.at:52): ok     (0m0.080s 0m0.039s)
1230. column names may not begin with _ - C (ovsdb-table.at:59): ok     (0m0.005s 0m0.012s)
1231. column names may not begin with _ - Python (ovsdb-table.at:59): ok     (0m0.076s 0m0.038s)
1232. table must have at least one column (1) - C (ovsdb-table.at:65): ok     (0m0.004s 0m0.010s)
1233. table must have at least one column (1) - Python (ovsdb-table.at:65): ok     (0m0.070s 0m0.035s)
1234. table must have at least one column (2) - C (ovsdb-table.at:69): ok     (0m0.004s 0m0.010s)
1235. table must have at least one column (2) - Python (ovsdb-table.at:69): ok     (0m0.071s 0m0.035s)
1236. table maxRows must be positive - C (ovsdb-table.at:73): ok     (0m0.004s 0m0.010s)
1237. table maxRows must be positive - Python (ovsdb-table.at:73): ok     (0m0.071s 0m0.035s)
1238. row with one string column (ovsdb-row.at:3): ok     (0m0.003s 0m0.006s)
1239. row with one integer column (ovsdb-row.at:19): ok     (0m0.003s 0m0.006s)
1240. row with one real column (ovsdb-row.at:35): ok     (0m0.003s 0m0.006s)
1241. row with one boolean column (ovsdb-row.at:51): ok     (0m0.003s 0m0.006s)
1242. row with one uuid column (ovsdb-row.at:64): ok     (0m0.003s 0m0.006s)
1243. row with set of 1 to 2 elements (ovsdb-row.at:77): ok     (0m0.003s 0m0.006s)
1244. row with map of 1 to 2 elements (ovsdb-row.at:84): ok     (0m0.003s 0m0.006s)
1245. row with several columns (ovsdb-row.at:91): ok     (0m0.004s 0m0.008s)
1246. row hashing (scalars) (ovsdb-row.at:113): ok     (0m0.008s 0m0.017s)
1247. row hashing (sets) (ovsdb-row.at:182): ok     (0m0.007s 0m0.016s)
1248. row hashing (maps) (ovsdb-row.at:235): ok     (0m0.003s 0m0.007s)
1249. schema with valid refTables - C (ovsdb-schema.at:3): ok     (0m0.003s 0m0.006s)
1250. schema with valid refTables - Python (ovsdb-schema.at:3): ok     (0m0.071s 0m0.031s)
1251. schema with ephemeral strong references - C (ovsdb-schema.at:30): ok     (0m0.003s 0m0.006s)
1252. schema with ephemeral strong references - Python (ovsdb-schema.at:30): ok     (0m0.071s 0m0.031s)
1253. schema without version number - C (ovsdb-schema.at:61): ok     (0m0.003s 0m0.006s)
1254. schema without version number - Python (ovsdb-schema.at:61): ok     (0m0.070s 0m0.031s)
1255. schema with invalid refTables - C (ovsdb-schema.at:71): ok     (0m0.004s 0m0.010s)
1256. schema with invalid refTables - Python (ovsdb-schema.at:71): ok     (0m0.071s 0m0.035s)
1257. schema with invalid version number - C (ovsdb-schema.at:94): ok     (0m0.004s 0m0.010s)
1258. schema with invalid version number - Python (ovsdb-schema.at:94): ok     (0m0.071s 0m0.035s)
1259. null condition (ovsdb-condition.at:3): ok     (0m0.003s 0m0.006s)
1260. conditions on scalars (ovsdb-condition.at:9): ok     (0m0.003s 0m0.007s)
1261. disallowed conditions on scalars (ovsdb-condition.at:75): ok     (0m0.003s 0m0.006s)
1262. conditions on sets (ovsdb-condition.at:112): ok     (0m0.003s 0m0.007s)
1263. condition sorting (ovsdb-condition.at:173): ok     (0m0.003s 0m0.006s)
1264. evaluating null condition (ovsdb-condition.at:187): ok     (0m0.003s 0m0.006s)
1265. evaluating conditions on integers (ovsdb-condition.at:196): ok     (0m0.003s 0m0.006s)
1266. evaluating conditions on reals (ovsdb-condition.at:221): ok     (0m0.003s 0m0.006s)
1267. evaluating conditions on booleans (ovsdb-condition.at:246): ok     (0m0.003s 0m0.006s)
1268. evaluating conditions on strings (ovsdb-condition.at:270): ok     (0m0.003s 0m0.006s)
1269. evaluating conditions on UUIDs (ovsdb-condition.at:295): ok     (0m0.003s 0m0.006s)
1270. evaluating conditions on sets (ovsdb-condition.at:321): ok     (0m0.003s 0m0.006s)
1271. evaluating conditions on maps (1) (ovsdb-condition.at:403): ok     (0m0.003s 0m0.006s)
1272. evaluating conditions on maps (2) (ovsdb-condition.at:488): ok     (0m0.003s 0m0.007s)
1273. evaluating conditions on optional integers (ovsdb-condition.at:580): ok     (0m0.003s 0m0.006s)
1274. evaluating conditions on optional strings (ovsdb-condition.at:607): ok     (0m0.003s 0m0.006s)
1275. evaluating conditions on optional reals (ovsdb-condition.at:634): ok     (0m0.003s 0m0.006s)
1276. null mutation (ovsdb-mutation.at:3): ok     (0m0.003s 0m0.006s)
1277. mutations on scalars (ovsdb-mutation.at:9): ok     (0m0.003s 0m0.006s)
1278. disallowed mutations on scalars (ovsdb-mutation.at:37): ok     (0m0.004s 0m0.007s)
1279. disallowed mutations on immutable columns (ovsdb-mutation.at:102): ok     (0m0.003s 0m0.006s)
1280. mutations on sets (ovsdb-mutation.at:114): ok     (0m0.003s 0m0.007s)
1281. executing null mutation (ovsdb-mutation.at:166): ok     (0m0.003s 0m0.006s)
1282. executing mutations on integers (ovsdb-mutation.at:179): ok     (0m0.003s 0m0.006s)
1283. integer overflow detection (ovsdb-mutation.at:216): ok     (0m0.003s 0m0.006s)
1284. executing mutations on integers with constraints (ovsdb-mutation.at:297): ok     (0m0.003s 0m0.006s)
1285. executing mutations on reals (ovsdb-mutation.at:336): ok     (0m0.003s 0m0.006s)
1286. real overflow detection (ovsdb-mutation.at:367): ok     (0m0.003s 0m0.006s)
1287. executing mutations on reals with constraints (ovsdb-mutation.at:410): ok     (0m0.003s 0m0.006s)
1288. executing mutations on integer sets (ovsdb-mutation.at:443): ok     (0m0.003s 0m0.006s)
1289. executing mutations on integer sets with constraints (ovsdb-mutation.at:517): ok     (0m0.003s 0m0.006s)
1290. executing mutations on real sets (ovsdb-mutation.at:556): ok     (0m0.003s 0m0.006s)
1291. executing mutations on boolean sets (ovsdb-mutation.at:629): ok     (0m0.003s 0m0.006s)
1292. executing mutations on string sets (ovsdb-mutation.at:679): ok     (0m0.003s 0m0.006s)
1293. executing mutations on uuid sets (ovsdb-mutation.at:729): ok     (0m0.003s 0m0.006s)
1294. executing mutations on integer maps (ovsdb-mutation.at:779): ok     (0m0.003s 0m0.006s)
1295. queries on scalars (ovsdb-query.at:3): ok     (0m0.003s 0m0.006s)
1296. queries on sets (ovsdb-query.at:95): ok     (0m0.003s 0m0.006s)
1297. queries on maps (1) (ovsdb-query.at:176): ok     (0m0.003s 0m0.006s)
1298. queries on maps (2) (ovsdb-query.at:260): ok     (0m0.008s 0m0.015s)
1299. UUID-distinct queries on scalars (ovsdb-query.at:351): ok     (0m0.007s 0m0.015s)
1300. Boolean-distinct queries on scalars (ovsdb-query.at:444): ok     (0m0.003s 0m0.007s)
1301. parse colunn set containing bad name (ovsdb-query.at:537): ok     (0m0.004s 0m0.010s)
1302. empty table, empty transaction (ovsdb-transaction.at:3): ok     (0m0.003s 0m0.006s)
1303. nonempty table, empty transaction (ovsdb-transaction.at:17): ok     (0m0.003s 0m0.006s)
1304. insert, commit (ovsdb-transaction.at:41): ok     (0m0.003s 0m0.007s)
1305. insert, abort (ovsdb-transaction.at:70): ok     (0m0.003s 0m0.006s)
1306. modify, commit (ovsdb-transaction.at:98): ok     (0m0.003s 0m0.006s)
1307. modify, abort (ovsdb-transaction.at:127): ok     (0m0.003s 0m0.006s)
1308. delete, commit (ovsdb-transaction.at:156): ok     (0m0.003s 0m0.006s)
1309. delete, abort (ovsdb-transaction.at:181): ok     (0m0.003s 0m0.006s)
1310. modify, delete, commit (ovsdb-transaction.at:207): ok     (0m0.003s 0m0.006s)
1311. modify, delete, abort (ovsdb-transaction.at:234): ok     (0m0.003s 0m0.006s)
1312. insert, delete, commit (ovsdb-transaction.at:262): ok     (0m0.003s 0m0.006s)
1313. insert, delete, abort (ovsdb-transaction.at:291): ok     (0m0.003s 0m0.006s)
1314. insert, modify, delete, commit (ovsdb-transaction.at:322): ok     (0m0.003s 0m0.006s)
1315. insert, modify, delete, abort (ovsdb-transaction.at:353): ok     (0m0.003s 0m0.006s)
1316. deletes are aborted cleanly (ovsdb-transaction.at:385): ok     (0m0.003s 0m0.006s)
1317. uuid-name must be <id> (ovsdb-execution.at:146): ok     (0m0.010s 0m0.017s)
1318. named-uuid must be <id> (ovsdb-execution.at:156): ok     (0m0.010s 0m0.017s)
1319. duplicate uuid-name not allowed (ovsdb-execution.at:165): ok     (0m0.011s 0m0.018s)
1320. insert default row, query table (ovsdb-execution.at:1101): ok     (0m0.011s 0m0.017s)
1321. insert row, query table (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1322. insert rows, query by value (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1323. insert rows, query by named-uuid (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1324. insert rows, update rows by value (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1325. insert rows, mutate rows (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1326. insert rows, delete by named-uuid (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1327. insert rows, delete rows by value (ovsdb-execution.at:1101): ok     (0m0.012s 0m0.019s)
1328. insert rows, delete by (non-matching) value (ovsdb-execution.at:1101): ok     (0m0.011s 0m0.017s)
1329. insert rows, delete all (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1330. insert row, query table, commit (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1331. insert row, query table, commit durably (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1332. equality wait with correct rows (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1333. equality wait with extra row (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1334. equality wait with missing row (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1335. inequality wait with correct rows (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1336. inequality wait with extra row (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1337. inequality wait with missing row (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1338. insert and update constraints (ovsdb-execution.at:1101): ok     (0m0.011s 0m0.017s)
1339. index uniqueness checking (ovsdb-execution.at:1101): ok     (0m0.011s 0m0.017s)
1340. referential integrity -- simple (ovsdb-execution.at:1101): ok     (0m0.011s 0m0.017s)
1341. referential integrity -- mutual references (ovsdb-execution.at:1101): ok     (0m0.011s 0m0.017s)
1342. weak references (ovsdb-execution.at:1101): ok     (0m0.011s 0m0.018s)
1343. immutable columns (ovsdb-execution.at:1101): ok     (0m0.010s 0m0.017s)
1344. garbage collection (ovsdb-execution.at:1101): ok     (0m0.011s 0m0.018s)
1345. trigger fires immediately (ovsdb-trigger.at:15): ok     (0m0.010s 0m0.017s)
1346. trigger times out (ovsdb-trigger.at:38): ok     (0m0.010s 0m0.017s)
1347. trigger fires after delay (ovsdb-trigger.at:61): ok     (0m0.011s 0m0.018s)
1348. delayed trigger modifies database (ovsdb-trigger.at:92): ok     (0m0.011s 0m0.018s)
1349. one delayed trigger wakes up another (ovsdb-trigger.at:132): ok     (0m0.011s 0m0.018s)
1350. insert default row, query table (ovsdb-tool.at:29): ok     (0m0.016s 0m0.029s)
1351. insert row, query table (ovsdb-tool.at:29): ok     (0m0.016s 0m0.029s)
1352. insert rows, query by value (ovsdb-tool.at:29): ok     (0m0.022s 0m0.042s)
1353. insert rows, query by named-uuid (ovsdb-tool.at:29): ok     (0m0.013s 0m0.022s)
1354. insert rows, update rows by value (ovsdb-tool.at:29): ok     (0m0.022s 0m0.042s)
1355. insert rows, mutate rows (ovsdb-tool.at:29): ok     (0m0.022s 0m0.042s)
1356. insert rows, delete by named-uuid (ovsdb-tool.at:29): ok     (0m0.013s 0m0.022s)
1357. insert rows, delete rows by value (ovsdb-tool.at:29): ok     (0m0.040s 0m0.075s)
1358. insert rows, delete by (non-matching) value (ovsdb-tool.at:29): ok     (0m0.037s 0m0.074s)
1359. insert rows, delete all (ovsdb-tool.at:29): ok     (0m0.013s 0m0.021s)
1360. insert row, query table, commit (ovsdb-tool.at:29): ok     (0m0.013s 0m0.021s)
1361. insert row, query table, commit durably (ovsdb-tool.at:29): ok     (0m0.013s 0m0.022s)
1362. equality wait with correct rows (ovsdb-tool.at:29): ok     (0m0.013s 0m0.021s)
1363. equality wait with extra row (ovsdb-tool.at:29): ok     (0m0.013s 0m0.022s)
1364. equality wait with missing row (ovsdb-tool.at:29): ok     (0m0.013s 0m0.021s)
1365. inequality wait with correct rows (ovsdb-tool.at:29): ok     (0m0.013s 0m0.021s)
1366. inequality wait with extra row (ovsdb-tool.at:29): ok     (0m0.014s 0m0.023s)
1367. inequality wait with missing row (ovsdb-tool.at:29): ok     (0m0.013s 0m0.021s)
1368. insert and update constraints (ovsdb-tool.at:29): ok     (0m0.026s 0m0.049s)
1369. index uniqueness checking (ovsdb-tool.at:29): ok     (0m0.035s 0m0.069s)
1370. referential integrity -- simple (ovsdb-tool.at:29): ok     (0m0.039s 0m0.076s)
1371. referential integrity -- mutual references (ovsdb-tool.at:29): ok     (0m0.033s 0m0.063s)
1372. weak references (ovsdb-tool.at:29): ok     (0m0.060s 0m0.118s)
1373. immutable columns (ovsdb-tool.at:29): ok     (0m0.026s 0m0.049s)
1374. garbage collection (ovsdb-tool.at:29): ok     (0m0.063s 0m0.124s)
1375. transaction comments (ovsdb-tool.at:31): ok     (0m0.013s 0m0.023s)
1376. ovsdb-tool compact (ovsdb-tool.at:49): ok     (0m0.071s 0m0.126s)
1377. ovsdb-tool convert -- removing a column (ovsdb-tool.at:156): ok     (0m0.039s 0m0.076s)
1378. ovsdb-tool convert -- adding a column (ovsdb-tool.at:223): ok     (0m0.045s 0m0.087s)
1379. ovsdb-tool schema-version (ovsdb-tool.at:289): ok     (0m0.004s 0m0.009s)
1380. ovsdb-tool db-version (ovsdb-tool.at:296): ok     (0m0.007s 0m0.015s)
1381. ovsdb-tool schema-cksum (ovsdb-tool.at:305): ok     (0m0.003s 0m0.007s)
1382. ovsdb-tool db-cksum (ovsdb-tool.at:312): ok     (0m0.006s 0m0.013s)
1383. ovsdb-tool needs-conversion (no conversion needed) (ovsdb-tool.at:321): ok     (0m0.006s 0m0.013s)
1384. ovsdb-tool needs-conversion (conversion needed) (ovsdb-tool.at:330): ok     (0m0.008s 0m0.018s)
1385. insert default row, query table (ovsdb-server.at:38): ok     (0m0.023s 0m0.049s)
1386. insert row, query table (ovsdb-server.at:38): ok     (0m0.023s 0m0.049s)
1387. insert rows, query by value (ovsdb-server.at:38): ok     (0m0.029s 0m0.062s)
1388. insert rows, query by named-uuid (ovsdb-server.at:38): ok     (0m0.020s 0m0.042s)
1389. insert rows, update rows by value (ovsdb-server.at:38): ok     (0m0.030s 0m0.063s)
1390. insert rows, mutate rows (ovsdb-server.at:38): ok     (0m0.031s 0m0.066s)
1391. insert rows, delete by named-uuid (ovsdb-server.at:38): ok     (0m0.020s 0m0.042s)
1392. insert rows, delete rows by value (ovsdb-server.at:38): ok     (0m0.030s 0m0.063s)
1393. insert rows, delete by (non-matching) value (ovsdb-server.at:38): ok     (0m0.030s 0m0.062s)
1394. insert rows, delete all (ovsdb-server.at:38): ok     (0m0.020s 0m0.042s)
1395. insert row, query table, commit (ovsdb-server.at:38): ok     (0m0.020s 0m0.042s)
1396. insert row, query table, commit durably (ovsdb-server.at:38): ok     (0m0.021s 0m0.043s)
1397. equality wait with correct rows (ovsdb-server.at:38): ok     (0m0.020s 0m0.042s)
1398. equality wait with extra row (ovsdb-server.at:38): ok     (0m0.020s 0m0.041s)
1399. equality wait with missing row (ovsdb-server.at:38): ok     (0m0.021s 0m0.043s)
1400. inequality wait with correct rows (ovsdb-server.at:38): ok     (0m0.020s 0m0.042s)
1401. inequality wait with extra row (ovsdb-server.at:38): ok     (0m0.020s 0m0.042s)
1402. inequality wait with missing row (ovsdb-server.at:38): ok     (0m0.021s 0m0.043s)
1403. insert and update constraints (ovsdb-server.at:38): ok     (0m0.032s 0m0.069s)
1404. index uniqueness checking (ovsdb-server.at:38): ok     (0m0.043s 0m0.092s)
1405. referential integrity -- simple (ovsdb-server.at:38): ok     (0m0.045s 0m0.096s)
1406. referential integrity -- mutual references (ovsdb-server.at:38): ok     (0m0.039s 0m0.083s)
1407. weak references (ovsdb-server.at:38): ok     (0m0.064s 0m0.137s)
1408. immutable columns (ovsdb-server.at:38): ok     (0m0.033s 0m0.071s)
1409. garbage collection (ovsdb-server.at:38): ok     (0m0.067s 0m0.146s)
1410. truncating corrupted database log (ovsdb-server.at:42): ok     (0m0.038s 0m0.062s)
1411. truncating database log with bad transaction (ovsdb-server.at:89): ok     (0m0.039s 0m0.064s)
1412. ovsdb-client get-schema-version (ovsdb-server.at:137): ok     (0m0.014s 0m0.034s)
1413. database multiplexing implementation (ovsdb-server.at:147): ok     (0m0.020s 0m0.047s)
1414. ovsdb-server/add-db and remove-db (ovsdb-server.at:166): ok     (0m0.054s 0m0.124s)
1415. ovsdb-server/add-db with --monitor (ovsdb-server.at:249): ok     (0m0.021s 0m0.051s)
1416. ovsdb-server/add-db and remove-db with --monitor (ovsdb-server.at:280): ok     (0m0.021s 0m0.052s)
1417. --remote=db: implementation (ovsdb-server.at:309): ok     (0m0.020s 0m0.038s)
1418. ovsdb-server/add-remote and remove-remote (ovsdb-server.at:372): ok     (0m0.024s 0m0.057s)
1419. ovsdb-server/add-remote with --monitor (ovsdb-server.at:424): ok     (0m0.016s 0m0.041s)
1420. ovsdb-server/add-remote and remove-remote with --monitor (ovsdb-server.at:453): ok     (0m0.019s 0m0.047s)
1421. SSL db: implementation (ovsdb-server.at:486): ok     (0m0.028s 0m0.053s)
1422. compacting online (ovsdb-server.at:542): ok     (0m0.076s 0m0.158s)
1423. ovsdb-server combines updates on backlogged connections (ovsdb-server.at:674): ok     (0m0.394s 0m0.633s)
1424. insert default row, query table (ovsdb-server.at:807): ok     (0m0.039s 0m0.055s)
1425. insert row, query table (ovsdb-server.at:807): ok     (0m0.040s 0m0.058s)
1426. insert rows, query by value (ovsdb-server.at:807): ok     (0m0.061s 0m0.075s)
1427. insert rows, query by named-uuid (ovsdb-server.at:807): ok     (0m0.029s 0m0.047s)
1428. insert rows, update rows by value (ovsdb-server.at:807): ok     (0m0.057s 0m0.070s)
1429. insert rows, mutate rows (ovsdb-server.at:807): ok     (0m0.057s 0m0.069s)
1430. insert rows, delete by named-uuid (ovsdb-server.at:807): ok     (0m0.029s 0m0.048s)
1431. insert rows, delete rows by value (ovsdb-server.at:807): ok     (0m0.057s 0m0.070s)
1432. insert rows, delete by (non-matching) value (ovsdb-server.at:807): ok     (0m0.057s 0m0.070s)
1433. insert rows, delete all (ovsdb-server.at:807): ok     (0m0.028s 0m0.047s)
1434. insert row, query table, commit (ovsdb-server.at:807): ok     (0m0.030s 0m0.050s)
1435. insert row, query table, commit durably (ovsdb-server.at:807): ok     (0m0.029s 0m0.048s)
1436. equality wait with correct rows (ovsdb-server.at:807): ok     (0m0.029s 0m0.047s)
1437. equality wait with extra row (ovsdb-server.at:807): ok     (0m0.028s 0m0.047s)
1438. equality wait with missing row (ovsdb-server.at:807): ok     (0m0.028s 0m0.047s)
1439. inequality wait with correct rows (ovsdb-server.at:807): ok     (0m0.029s 0m0.047s)
1440. inequality wait with extra row (ovsdb-server.at:807): ok     (0m0.028s 0m0.047s)
1441. inequality wait with missing row (ovsdb-server.at:807): ok     (0m0.028s 0m0.047s)
1442. insert and update constraints (ovsdb-server.at:807): ok     (0m0.066s 0m0.078s)
1443. index uniqueness checking (ovsdb-server.at:807): ok     (0m0.098s 0m0.105s)
1444. referential integrity -- simple (ovsdb-server.at:807): ok     (0m0.109s 0m0.114s)
1445. referential integrity -- mutual references (ovsdb-server.at:807): ok     (0m0.096s 0m0.104s)
1446. weak references (ovsdb-server.at:807): ok     (0m0.162s 0m0.155s)
1447. immutable columns (ovsdb-server.at:807): ok     (0m0.067s 0m0.079s)
1448. garbage collection (ovsdb-server.at:807): ok     (0m0.172s 0m0.163s)
1449. insert default row, query table (ovsdb-server.at:845): ok     (0m0.038s 0m0.055s)
1450. ovsdb-client get-schema-version - tcp socket (ovsdb-server.at:849): ok     (0m0.016s 0m0.039s)
1451. insert default row, query table (ovsdb-server.at:892): ok     (0m0.025s 0m0.053s)
1452. insert row, query table (ovsdb-server.at:892): ok     (0m0.025s 0m0.053s)
1453. insert rows, query by value (ovsdb-server.at:892): ok     (0m0.031s 0m0.067s)
1454. insert rows, query by named-uuid (ovsdb-server.at:892): ok     (0m0.022s 0m0.045s)
1455. insert rows, update rows by value (ovsdb-server.at:892): ok     (0m0.032s 0m0.067s)
1456. insert rows, mutate rows (ovsdb-server.at:892): ok     (0m0.032s 0m0.067s)
1457. insert rows, delete by named-uuid (ovsdb-server.at:892): ok     (0m0.050s 0m0.106s)
1458. insert rows, delete rows by value (ovsdb-server.at:892): ok     (0m0.038s 0m0.087s)
1459. insert rows, delete by (non-matching) value (ovsdb-server.at:892): ok     (0m0.031s 0m0.066s)
1460. insert rows, delete all (ovsdb-server.at:892): ok     (0m0.025s 0m0.052s)
1461. insert row, query table, commit (ovsdb-server.at:892): ok     (0m0.026s 0m0.054s)
1462. insert row, query table, commit durably (ovsdb-server.at:892): ok     (0m0.025s 0m0.051s)
1463. equality wait with correct rows (ovsdb-server.at:892): ok     (0m0.022s 0m0.046s)
1464. equality wait with extra row (ovsdb-server.at:892): ok     (0m0.022s 0m0.047s)
1465. equality wait with missing row (ovsdb-server.at:892): ok     (0m0.021s 0m0.045s)
1466. inequality wait with correct rows (ovsdb-server.at:892): ok     (0m0.021s 0m0.045s)
1467. inequality wait with extra row (ovsdb-server.at:892): ok     (0m0.024s 0m0.047s)
1468. inequality wait with missing row (ovsdb-server.at:892): ok     (0m0.022s 0m0.047s)
1469. insert and update constraints (ovsdb-server.at:892): ok     (0m0.035s 0m0.074s)
1470. index uniqueness checking (ovsdb-server.at:892): ok     (0m0.043s 0m0.093s)
1471. referential integrity -- simple (ovsdb-server.at:892): ok     (0m0.047s 0m0.103s)
1472. referential integrity -- mutual references (ovsdb-server.at:892): ok     (0m0.040s 0m0.087s)
1473. weak references (ovsdb-server.at:892): ok     (0m0.065s 0m0.140s)
1474. immutable columns (ovsdb-server.at:892): ok     (0m0.034s 0m0.073s)
1475. garbage collection (ovsdb-server.at:892): ok     (0m0.068s 0m0.148s)
1476. insert default row, query table (ovsdb-server.at:929): ok     (0m0.025s 0m0.054s)
1477. insert default row, query table (ovsdb-server.at:965): ok     (0m0.028s 0m0.045s)
1478. insert row, query table (ovsdb-server.at:965): ok     (0m0.028s 0m0.045s)
1479. insert rows, query by value (ovsdb-server.at:965): ok     (0m0.046s 0m0.075s)
1480. insert rows, query by named-uuid (ovsdb-server.at:965): ok     (0m0.019s 0m0.031s)
1481. insert rows, update rows by value (ovsdb-server.at:965): ok     (0m0.046s 0m0.076s)
1482. insert rows, mutate rows (ovsdb-server.at:965): ok     (0m0.047s 0m0.076s)
1483. insert rows, delete by named-uuid (ovsdb-server.at:965): ok     (0m0.019s 0m0.031s)
1484. insert rows, delete rows by value (ovsdb-server.at:965): ok     (0m0.047s 0m0.077s)
1485. insert rows, delete by (non-matching) value (ovsdb-server.at:965): ok     (0m0.046s 0m0.075s)
1486. insert rows, delete all (ovsdb-server.at:965): ok     (0m0.019s 0m0.031s)
1487. insert row, query table, commit (ovsdb-server.at:965): ok     (0m0.020s 0m0.032s)
1488. insert row, query table, commit durably (ovsdb-server.at:965): ok     (0m0.019s 0m0.031s)
1489. equality wait with correct rows (ovsdb-server.at:965): ok     (0m0.019s 0m0.031s)
1490. equality wait with extra row (ovsdb-server.at:965): ok     (0m0.019s 0m0.031s)
1491. equality wait with missing row (ovsdb-server.at:965): ok     (0m0.019s 0m0.031s)
1492. inequality wait with correct rows (ovsdb-server.at:965): ok     (0m0.020s 0m0.031s)
1493. inequality wait with extra row (ovsdb-server.at:965): ok     (0m0.019s 0m0.030s)
1494. inequality wait with missing row (ovsdb-server.at:965): ok     (0m0.020s 0m0.032s)
1495. insert and update constraints (ovsdb-server.at:965): ok     (0m0.056s 0m0.090s)
1496. index uniqueness checking (ovsdb-server.at:965): ok     (0m0.082s 0m0.134s)
1497. referential integrity -- simple (ovsdb-server.at:965): ok     (0m0.091s 0m0.148s)
1498. referential integrity -- mutual references (ovsdb-server.at:965): ok     (0m0.075s 0m0.121s)
1499. weak references (ovsdb-server.at:965): ok     (0m0.147s 0m0.238s)
1500. immutable columns (ovsdb-server.at:965): ok     (0m0.056s 0m0.093s)
1501. garbage collection (ovsdb-server.at:965): ok     (0m0.233s 0m0.384s)
1502. monitor insert into empty table (ovsdb-monitor.at:47): ok     (0m0.028s 0m0.055s)
1503. monitor insert into populated table (ovsdb-monitor.at:59): ok     (0m0.031s 0m0.060s)
1504. monitor delete (ovsdb-monitor.at:77): ok     (0m0.032s 0m0.062s)
1505. monitor row update (ovsdb-monitor.at:95): ok     (0m0.030s 0m0.059s)
1506. monitor no-op row updates (ovsdb-monitor.at:115): ok     (0m0.032s 0m0.065s)
1507. monitor insert-and-update transaction (ovsdb-monitor.at:138): ok     (0m0.030s 0m0.058s)
1508. monitor insert-update-and-delete transaction (ovsdb-monitor.at:161): ok     (0m0.030s 0m0.058s)
1509. monitor weak reference change (ovsdb-monitor.at:190): ok     (0m0.031s 0m0.061s)
1510. monitor insert-update-and-delete transaction (ovsdb-monitor.at:225): ok     (0m0.030s 0m0.058s)
1511. monitor all operations (ovsdb-monitor.at:276): ok     (0m0.036s 0m0.071s)
1512. monitor initial only (ovsdb-monitor.at:296): ok     (0m0.036s 0m0.071s)
1513. monitor insert only (ovsdb-monitor.at:303): ok     (0m0.035s 0m0.070s)
1514. monitor delete only (ovsdb-monitor.at:310): ok     (0m0.035s 0m0.070s)
1515. monitor modify only (ovsdb-monitor.at:318): ok     (0m0.035s 0m0.069s)
1516. simple idl, initially empty, no ops - C (ovsdb-idl.at:114): ok     (0m0.021s 0m0.043s)
1517. simple idl, initially empty, no ops - Python (ovsdb-idl.at:114): ok     (0m0.090s 0m0.065s)
1518. simple idl, initially empty, no ops - Python register_columns (ovsdb-idl.at:114): ok     (0m0.098s 0m0.068s)
1519. simple idl, initially empty, no ops - Python tcp (ovsdb-idl.at:114): ok     (0m0.172s 0m0.113s)
1520. simple idl, initially empty, no ops - Python tcp6 (ovsdb-idl.at:114): ok     (0m0.098s 0m0.083s)
1521. simple idl, initially empty, various ops - C (ovsdb-idl.at:121): ok     (0m0.040s 0m0.075s)
1522. simple idl, initially empty, various ops - Python (ovsdb-idl.at:121): ok     (0m0.260s 0m0.158s)
1523. simple idl, initially empty, various ops - Python register_columns (ovsdb-idl.at:121): ok     (0m0.231s 0m0.152s)
1524. simple idl, initially empty, various ops - Python tcp (ovsdb-idl.at:121): ok     (0m0.267s 0m0.167s)
1525. simple idl, initially empty, various ops - Python tcp6 (ovsdb-idl.at:121): ok     (0m0.198s 0m0.160s)
1526. simple idl, initially populated - C (ovsdb-idl.at:199): ok     (0m0.055s 0m0.113s)
1527. simple idl, initially populated - Python (ovsdb-idl.at:199): ok     (0m0.115s 0m0.109s)
1528. simple idl, initially populated - Python register_columns (ovsdb-idl.at:199): ok     (0m0.105s 0m0.076s)
1529. simple idl, initially populated - Python tcp (ovsdb-idl.at:199): ok     (0m0.220s 0m0.148s)
1530. simple idl, initially populated - Python tcp6 (ovsdb-idl.at:199): ok     (0m0.100s 0m0.076s)
1531. simple idl, writing via IDL - C (ovsdb-idl.at:230): ok     (0m0.023s 0m0.047s)
1532. simple idl, writing via IDL - Python (ovsdb-idl.at:230): ok     (0m0.101s 0m0.071s)
1533. simple idl, writing via IDL - Python register_columns (ovsdb-idl.at:230): ok     (0m0.103s 0m0.074s)
1534. simple idl, writing via IDL - Python tcp (ovsdb-idl.at:230): ok     (0m0.104s 0m0.075s)
1535. simple idl, writing via IDL - Python tcp6 (ovsdb-idl.at:230): ok     (0m0.104s 0m0.077s)
1536. simple idl, handling verification failure - C (ovsdb-idl.at:261): ok     (0m0.023s 0m0.047s)
1537. simple idl, handling verification failure - Python (ovsdb-idl.at:261): ok     (0m0.110s 0m0.074s)
1538. simple idl, handling verification failure - Python register_columns (ovsdb-idl.at:261): ok     (0m0.103s 0m0.073s)
1539. simple idl, handling verification failure - Python tcp (ovsdb-idl.at:261): ok     (0m0.104s 0m0.076s)
1540. simple idl, handling verification failure - Python tcp6 (ovsdb-idl.at:261): ok     (0m0.103s 0m0.075s)
1541. simple idl, increment operation - C (ovsdb-idl.at:292): ok     (0m0.023s 0m0.047s)
1542. simple idl, increment operation - Python (ovsdb-idl.at:292): ok     (0m0.096s 0m0.071s)
1543. simple idl, increment operation - Python register_columns (ovsdb-idl.at:292): ok     (0m0.096s 0m0.071s)
1544. simple idl, increment operation - Python tcp (ovsdb-idl.at:292): ok     (0m0.238s 0m0.181s)
1545. simple idl, increment operation - Python tcp6 (ovsdb-idl.at:292): ok     (0m0.116s 0m0.116s)
1546. simple idl, aborting - C (ovsdb-idl.at:304): ok     (0m0.023s 0m0.048s)
1547. simple idl, aborting - Python (ovsdb-idl.at:304): ok     (0m0.096s 0m0.071s)
1548. simple idl, aborting - Python register_columns (ovsdb-idl.at:304): ok     (0m0.097s 0m0.073s)
1549. simple idl, aborting - Python tcp (ovsdb-idl.at:304): ok     (0m0.103s 0m0.077s)
1550. simple idl, aborting - Python tcp6 (ovsdb-idl.at:304): ok     (0m0.101s 0m0.077s)
1551. simple idl, destroy without commit or abort - C (ovsdb-idl.at:318): ok     (0m0.023s 0m0.048s)
1552. simple idl, destroy without commit or abort - Python (ovsdb-idl.at:318): ok     (0m0.095s 0m0.071s)
1553. simple idl, destroy without commit or abort - Python register_columns (ovsdb-idl.at:318): ok     (0m0.100s 0m0.075s)
1554. simple idl, destroy without commit or abort - Python tcp (ovsdb-idl.at:318): ok     (0m0.098s 0m0.076s)
1555. simple idl, destroy without commit or abort - Python tcp6 (ovsdb-idl.at:318): ok     (0m0.097s 0m0.075s)
1556. self-linking idl, consistent ops - C (ovsdb-idl.at:332): ok     (0m0.021s 0m0.043s)
1557. self-linking idl, consistent ops - Python (ovsdb-idl.at:332): ok     (0m0.099s 0m0.067s)
1558. self-linking idl, consistent ops - Python register_columns (ovsdb-idl.at:332): ok     (0m0.097s 0m0.065s)
1559. self-linking idl, consistent ops - Python tcp (ovsdb-idl.at:332): ok     (0m0.099s 0m0.070s)
1560. self-linking idl, consistent ops - Python tcp6 (ovsdb-idl.at:332): ok     (0m0.100s 0m0.070s)
1561. self-linking idl, inconsistent ops - C (ovsdb-idl.at:376): ok     (0m0.023s 0m0.047s)
1562. self-linking idl, inconsistent ops - Python (ovsdb-idl.at:376): ok     (0m0.099s 0m0.068s)
1563. self-linking idl, inconsistent ops - Python register_columns (ovsdb-idl.at:376): ok     (0m0.113s 0m0.093s)
1564. self-linking idl, inconsistent ops - Python tcp (ovsdb-idl.at:376): ok     (0m0.142s 0m0.123s)
1565. self-linking idl, inconsistent ops - Python tcp6 (ovsdb-idl.at:376): ok     (0m0.101s 0m0.073s)
1566. self-linking idl, sets - C (ovsdb-idl.at:424): ok     (0m0.021s 0m0.043s)
1567. self-linking idl, sets - Python (ovsdb-idl.at:424): ok     (0m0.107s 0m0.068s)
1568. self-linking idl, sets - Python register_columns (ovsdb-idl.at:424): ok     (0m0.104s 0m0.066s)
1569. self-linking idl, sets - Python tcp (ovsdb-idl.at:424): ok     (0m0.106s 0m0.070s)
1570. self-linking idl, sets - Python tcp6 (ovsdb-idl.at:424): ok     (0m0.113s 0m0.073s)
1571. external-linking idl, consistent ops - C (ovsdb-idl.at:474): ok     (0m0.021s 0m0.042s)
1572. external-linking idl, consistent ops - Python (ovsdb-idl.at:474): ok     (0m0.093s 0m0.066s)
1573. external-linking idl, consistent ops - Python register_columns (ovsdb-idl.at:474): ok     (0m0.093s 0m0.066s)
1574. external-linking idl, consistent ops - Python tcp (ovsdb-idl.at:474): ok     (0m0.094s 0m0.070s)
1575. external-linking idl, consistent ops - Python tcp6 (ovsdb-idl.at:474): ok     (0m0.095s 0m0.070s)
1576. external-linking idl, insert ops - Python (ovsdb-idl.at:492): ok     (0m0.094s 0m0.066s)
1577. getattr idl, insert ops - Python (ovsdb-idl.at:502): ok     (0m0.092s 0m0.065s)
1578. row-from-json idl, whats this - Python (ovsdb-idl.at:511): ok     (0m0.099s 0m0.074s)
1579. idl handling of missing tables and columns - C (ovsdb-idl.at:528): ok     (0m0.038s 0m0.084s)
1580. simple idl, initially populated - Python fetch (ovsdb-idl.at:621): ok     (0m0.094s 0m0.071s)
1581. track, simple idl, initially populated - C (ovsdb-idl.at:667): ok     (0m0.023s 0m0.047s)
1582. track, simple idl, initially empty, various ops - C (ovsdb-idl.at:697): ok     (0m0.040s 0m0.075s)
1583. ovs-vsctl connection retry (ovs-vsctl.at:145): ok     (0m0.042s 0m0.095s)
1584. add-br a (ovs-vsctl.at:189): ok     (0m0.137s 0m0.234s)
1585. add-br a, add-br a (ovs-vsctl.at:199): ok     (0m0.028s 0m0.050s)
1586. add-br a, add-br b (ovs-vsctl.at:209): ok     (0m0.101s 0m0.167s)
1587. add-br a, add-br b, del-br a (ovs-vsctl.at:226): ok     (0m0.066s 0m0.111s)
1588. add-br a, del-br a, add-br a (ovs-vsctl.at:237): ok     (0m0.063s 0m0.108s)
1589. add-br a, add-port a a1, add-port a a2 (ovs-vsctl.at:257): ok     (0m0.196s 0m0.327s)
1590. add-br a, add-port a a1, add-port a a1 (ovs-vsctl.at:271): ok     (0m0.025s 0m0.046s)
1591. add-br a b, add-port a a1, add-port b b1, del-br a (ovs-vsctl.at:283): ok     (0m0.072s 0m0.122s)
1592. add-br a, add-bond a bond0 a1 a2 a3 (ovs-vsctl.at:305): ok     (0m0.087s 0m0.146s)
1593. add-br a b, add-port a a1, add-port b b1, del-port a a1 (ovs-vsctl.at:323): ok     (0m0.130s 0m0.211s)
1594. add-br a, add-bond a bond0 a1 a2 a3, del-port bond0 (ovs-vsctl.at:354): ok     (0m0.057s 0m0.100s)
1595. external IDs (ovs-vsctl.at:371): ok     (0m0.126s 0m0.201s)
1596. controllers (ovs-vsctl.at:427): ok     (0m0.021s 0m0.040s)
1597. simple fake bridge (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.143s 0m0.235s)
1598. list bridges -- real and fake (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.045s 0m0.075s)
1599. simple fake bridge + del-br fake bridge (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.087s 0m0.142s)
1600. simple fake bridge + del-br real bridge (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.045s 0m0.074s)
1601. simple fake bridge + external IDs (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.190s 0m0.311s)
1602. simple fake bridge (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.142s 0m0.232s)
1603. list bridges -- real and fake (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.044s 0m0.073s)
1604. simple fake bridge + del-br fake bridge (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.089s 0m0.145s)
1605. simple fake bridge + del-br real bridge (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.045s 0m0.073s)
1606. simple fake bridge + external IDs (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.132s 0m0.216s)
1607. fake bridge on bond (ovs-vsctl.at:570): ok     (0m0.158s 0m0.263s)
1608. fake bridge on bond + del-br fake bridge (ovs-vsctl.at:582): ok     (0m0.102s 0m0.172s)
1609. fake bridge on bond + del-br real bridge (ovs-vsctl.at:594): ok     (0m0.074s 0m0.124s)
1610. managers (ovs-vsctl.at:606): ok     (0m0.026s 0m0.047s)
1611. database commands -- positive checks (ovs-vsctl.at:632): ok     (0m0.092s 0m0.157s)
1612. database commands -- negative checks (ovs-vsctl.at:745): ok     (0m0.150s 0m0.266s)
1613. database commands -- conditions (ovs-vsctl.at:870): ok     (0m0.576s 0m1.232s)
1614. database commands -- wait-until immediately true (ovs-vsctl.at:1005): ok     (0m0.034s 0m0.059s)
1615. database commands -- wait-until must wait (ovs-vsctl.at:1024): ok     (0m0.067s 0m0.126s)
1616. --id option on create, get commands (ovs-vsctl.at:1058): ok     (0m0.056s 0m0.087s)
1617. unreferenced record warnings (ovs-vsctl.at:1107): ok     (0m0.044s 0m0.068s)
1618. created row UUID is wrong in same execution (ovs-vsctl.at:1141): ok     (0m0.027s 0m0.048s)
1619. --all option on destroy command (ovs-vsctl.at:1178): ok     (0m0.123s 0m0.207s)
1620. add-port -- reserved names 1 (ovs-vsctl.at:1227): ok     (0m0.098s 0m0.197s)
1621. add-port -- reserved names 2 (ovs-vsctl.at:1257): ok     (0m0.075s 0m0.149s)
1622. naming in db commands (ovs-vsctl.at:1293): ok     (0m0.032s 0m0.058s)
1623. bootstrap ca cert (ovs-vsctl.at:1311): ok     (0m0.220s 0m0.164s)
1624. peer ca cert (ovs-vsctl.at:1338): ok     (0m0.218s 0m0.157s)
1625. ovs-monitor-ipsec (ovs-monitor-ipsec.at:3): ok     (0m0.267s 0m0.537s)
1626. ovs-xapi-sync (ovs-xapi-sync.at:3): ok     (0m0.176s 0m0.289s)
1627. non-VLAN, non-bond (interface-reconfigure.at:697): ok     (0m0.327s 0m0.484s)
1628. VLAN, non-bond (interface-reconfigure.at:774): ok     (0m0.193s 0m0.310s)
1629. Bond, non-VLAN (interface-reconfigure.at:849): ok     (0m0.153s 0m0.224s)
1630. VLAN on bond (interface-reconfigure.at:939): ok     (0m0.153s 0m0.224s)
1631. Re-create port with different types (interface-reconfigure.at:1040): ok     (0m0.030s 0m0.056s)
1632. STP example from IEEE 802.1D-1998 (stp.at:3): ok     (0m0.005s 0m0.008s)
1633. STP example from IEEE 802.1D-2004 figures 17.4 and 17.5 (stp.at:27): ok     (0m0.010s 0m0.009s)
1634. STP example from IEEE 802.1D-2004 figure 17.6 (stp.at:70): ok     (0m0.005s 0m0.007s)
1635. STP example from IEEE 802.1D-2004 figure 17.7 (stp.at:96): ok     (0m0.005s 0m0.007s)
1636. STP.io.1.1: Link Failure (stp.at:125): ok     (0m0.006s 0m0.007s)
1637. STP.io.1.2: Repeated Network (stp.at:164): ok     (0m0.004s 0m0.007s)
1638. STP.io.1.4: Network Initialization (stp.at:188): ok     (0m0.005s 0m0.007s)
1639. STP.io.1.5: Topology Change (stp.at:214): ok     (0m0.010s 0m0.007s)
1640. STP.op.1.1 and STP.op.1.2 (stp.at:267): ok     (0m0.002s 0m0.005s)
1641. STP.op.1.4: All Ports Initialized to Designated Ports (stp.at:281): ok     (0m0.004s 0m0.007s)
1642. STP.op.3.1: Root Bridge Selection: Root ID Values (stp.at:302): ok     (0m0.004s 0m0.007s)
1643. STP.op.3.3: Root Bridge Selection: Bridge ID Values (stp.at:322): ok     (0m0.004s 0m0.007s)
1644. STP.op.3.3: Root Bridge Selection: Bridge ID Values (stp.at:345): ok     (0m0.004s 0m0.007s)
1645. STP - dummy interface (stp.at:380): ok     (0m0.100s 0m0.206s)
1646. RSTP Single bridge (rstp.at:3): ok     (0m0.005s 0m0.011s)
1647. RSTP Link failure (rstp.at:13): ok     (0m0.007s 0m0.009s)
1648. RSTP Double link Failure (rstp.at:32): ok     (0m0.020s 0m0.011s)
1649. RSTP example from IEEE 802.1D-2004 figures 17.4 and 17.5 (rstp.at:74): ok     (0m0.024s 0m0.010s)
1650. RSTP example from IEEE 802.1D-2004 figure 17.6 (rstp.at:111): ok     (0m0.012s 0m0.013s)
1651. RSTP example from IEEE 802.1D-2004 figure 17.7 (rstp.at:131): ok     (0m0.018s 0m0.013s)
1652. RSTP - dummy interface (rstp.at:163): ok     (0m0.137s 0m0.270s)
1653. vlog - Python (vlog.at:3): ok     (0m0.042s 0m0.023s)
1654. vlog - vlog/reopen - Python (vlog.at:104): ok     (0m0.066s 0m0.061s)
1655. vlog - vlog/reopen without log file - Python (vlog.at:129): ok     (0m0.058s 0m0.037s)
1656. vlog - vlog/reopen can't reopen log file - Python (vlog.at:143): ok     (0m0.070s 0m0.068s)
1657. vlog - vlog/set and vlog/list - Python (vlog.at:171): ok     (0m0.080s 0m0.080s)
1658. vlog - RFC5424 facility (vlog.at:222): ok     (0m0.029s 0m0.067s)
1659. vlog - RFC5424 facility - Python (vlog.at:259): ok     (0m0.111s 0m0.064s)
1660. add-ps a (vtep-ctl.at:135): ok     (0m0.027s 0m0.055s)
1661. add-ps a, add-ps a (vtep-ctl.at:143): ok     (0m0.020s 0m0.041s)
1662. add-ps a, add-ps b (vtep-ctl.at:153): ok     (0m0.031s 0m0.061s)
1663. add-ps a, add-ps b, del-ps a (vtep-ctl.at:162): ok     (0m0.031s 0m0.060s)
1664. add-ps a, del-ps a, add-ps a (vtep-ctl.at:171): ok     (0m0.028s 0m0.056s)
1665. add-ps a, add-port a a1, add-port a a2 (vtep-ctl.at:185): ok     (0m0.039s 0m0.075s)
1666. add-ps a, add-port a a1, add-port a a1 (vtep-ctl.at:198): ok     (0m0.023s 0m0.049s)
1667. add-ps a b, add-port a a1, add-port b b1, del-ps a (vtep-ctl.at:210): ok     (0m0.069s 0m0.137s)
1668. add-ps a b, add-port a a1, add-port b b1, del-port a a1 (vtep-ctl.at:231): ok     (0m0.050s 0m0.094s)
1669. add-ps a b, add-port a p1, add-port b p1, del-port a p1 (vtep-ctl.at:248): ok     (0m0.073s 0m0.136s)
1670. add-ls a (vtep-ctl.at:271): ok     (0m0.028s 0m0.057s)
1671. add-ls a, add-ls a (vtep-ctl.at:279): ok     (0m0.020s 0m0.042s)
1672. add-ls a, add-ls b (vtep-ctl.at:289): ok     (0m0.031s 0m0.061s)
1673. add-ls a, add-ls b, del-ls a (vtep-ctl.at:298): ok     (0m0.031s 0m0.061s)
1674. add-ls a, del-ls a, add-ls a (vtep-ctl.at:307): ok     (0m0.028s 0m0.058s)
1675. bind-ls ps1 pp1 300 ls1 (vtep-ctl.at:325): ok     (0m0.054s 0m0.103s)
1676. bind-ls ps1 pp1 300 ls1, bind-ls ps1 pp1 400 ls2 (vtep-ctl.at:343): ok     (0m0.058s 0m0.110s)
1677. bind-ls ps1 pp1 300, bind-ls ps2 pp2 300 ls2 (vtep-ctl.at:365): ok     (0m0.074s 0m0.137s)
1678. add-ucast-local ls1 (vtep-ctl.at:396): ok     (0m0.038s 0m0.073s)
1679. add-ucast-local ls1, overwrite (vtep-ctl.at:423): ok     (0m0.034s 0m0.067s)
1680. add-ucast-local ls1, del-ucast-local ls1 (vtep-ctl.at:443): ok     (0m0.039s 0m0.076s)
1681. add-ucast-remote ls1 (vtep-ctl.at:474): ok     (0m0.037s 0m0.072s)
1682. add-ucast-remote ls1, overwrite (vtep-ctl.at:501): ok     (0m0.035s 0m0.068s)
1683. add-ucast-remote ls1, del-ucast-remote ls1 (vtep-ctl.at:521): ok     (0m0.039s 0m0.076s)
1684. add-ucast-local ls1, add-ucast-remote ls1 (vtep-ctl.at:552): ok     (0m0.041s 0m0.079s)
1685. add-mcast-local ls1 (vtep-ctl.at:583): ok     (0m0.039s 0m0.076s)
1686. add-mcast-local ls1, del-mcast-local ls1 (vtep-ctl.at:612): ok     (0m0.044s 0m0.083s)
1687. add-mcast-remote ls1 (vtep-ctl.at:649): ok     (0m0.040s 0m0.076s)
1688. add-mcast-remote ls1, del-mcast-remote ls1 (vtep-ctl.at:678): ok     (0m0.044s 0m0.084s)
1689. add-mcast-local ls1, add-mcast-remote ls1 (vtep-ctl.at:715): ok     (0m0.045s 0m0.085s)
1690. add local and remote macs, clear-local-macs (vtep-ctl.at:750): ok     (0m0.057s 0m0.106s)
1691. add local and remote macs, clear-remote-macs (vtep-ctl.at:807): ok     (0m0.058s 0m0.107s)
1692. managers (vtep-ctl.at:867): ok     (0m0.019s 0m0.041s)
1693. show command (vtep-ctl.at:890): ok     (0m0.031s 0m0.063s)
1694. auto-attach - packet tests (auto-attach.at:3): ok     (0m0.003s 0m0.007s)
1695. ovn -- lexer (ovn.at:3): ok     (0m0.005s 0m0.009s)
1696. ovn -- expression parser (ovn.at:98): ok     (0m0.005s 0m0.010s)
1697. ovn -- expression annotation (ovn.at:268): ok     (0m0.005s 0m0.009s)
1698. ovn -- 1-term expression conversion (ovn.at:305): ok     (0m0.003s 0m0.006s)
1699. ovn -- 2-term expression conversion (ovn.at:311): ok     (0m0.019s 0m0.006s)
1700. ovn -- 3-term expression conversion (ovn.at:317): ok     (0m1.082s 0m0.008s)
1701. ovn -- 3-term numeric expression simplification (ovn.at:323): ok     (0m4.245s 0m0.012s)
1702. ovn -- 4-term string expression simplification (ovn.at:329): ok     (0m0.078s 0m0.006s)
1703. ovn -- 3-term mixed expression simplification (ovn.at:335): ok     (0m0.394s 0m0.008s)
1704. ovn -- 4-term numeric expression normalization (ovn.at:341): ok     (0m4.565s 0m0.018s)
1705. ovn -- 4-term string expression normalization (ovn.at:347): ok     (0m0.074s 0m0.013s)
1706. ovn -- 4-term mixed expression normalization (ovn.at:353): ok     (0m0.536s 0m0.011s)
1707. ovn -- 5-term numeric expression normalization (ovn.at:359): ok     (0m1.109s 0m0.008s)
1708. ovn -- 5-term string expression normalization (ovn.at:365): ok     (0m1.372s 0m0.009s)
1709. ovn -- 5-term mixed expression normalization (ovn.at:371): ok     (0m0.296s 0m0.007s)
1710. ovn -- 4-term numeric expressions to flows (ovn.at:377): ok     (0m1.288s 0m0.009s)
1711. ovn -- 4-term string expressions to flows (ovn.at:383): ok     (0m0.288s 0m0.008s)
1712. ovn -- 4-term mixed expressions to flows (ovn.at:389): ok     (0m0.335s 0m0.008s)
1713. ovn -- 3-term numeric expressions to flows (ovn.at:395): ok     (0m3.706s 0m0.012s)
1714. ovn -- converting expressions to flows -- string fields (ovn.at:401): ok     (0m0.067s 0m0.151s)
1715. ovn -- action parsing (ovn.at:437): ok     (0m0.005s 0m0.010s)
1716. ovn -- 3 HVs, 1 LS, 3 lports/HV (ovn.at:518): ok     (0m4.741s 0m11.953s)
1717. ovn -- 3 HVs, 1 VIFs/HV, 1 GW, 1 LS (ovn.at:685): ok     (0m0.637s 0m0.993s)
1718. ovn -- 3 HVs, 3 LS, 3 lports/LS, 1 LR (ovn.at:842): ok     (0m8.153s 0m17.379s)
1719. ovn-nbctl - basic lswitch commands (ovn-nbctl.at:23): ok     (0m0.039s 0m0.066s)
1720. ovn-nbctl - basic lport commands (ovn-nbctl.at:47): ok     (0m0.040s 0m0.069s)
1721. ovn-nbctl - addresses (ovn-nbctl.at:72): ok     (0m0.026s 0m0.055s)
1722. ovn-nbctl - port security (ovn-nbctl.at:95): ok     (0m0.026s 0m0.055s)
1723. ovn-nbctl - ACLs (ovn-nbctl.at:118): ok     (0m0.048s 0m0.097s)
1724. ovn-sbctl - chassis commands (ovn-sbctl.at:34): ok     (0m0.053s 0m0.124s)
1725. ovn-sbctl - test (ovn-sbctl.at:66): ok     (0m0.066s 0m0.140s)
1726. ovn-controller - ovn-bridge-mappings (ovn-controller.at:3): ok     (0m0.210s 0m0.381s)
1727. ovn-controller-vtep - test chassis (ovn-controller-vtep.at:112): ok     (0m0.305s 0m0.457s)
1728. ovn-controller-vtep - test binding 1 (ovn-controller-vtep.at:179): ok     (0m0.313s 0m0.477s)
1729. ovn-controller-vtep - test binding 2 (ovn-controller-vtep.at:243): ok     (0m0.174s 0m0.280s)
1730. ovn-controller-vtep - test vtep-lswitch (ovn-controller-vtep.at:282): ok     (0m0.244s 0m0.434s)
1731. ovn-controller-vtep - test vtep-macs 1 (ovn-controller-vtep.at:334): ok     (0m0.288s 0m0.511s)
1732. ovn-controller-vtep - test vtep-macs 2 (ovn-controller-vtep.at:405): ok     (0m0.194s 0m0.317s)
testsuite: ending at: Mon Oct 24 10:44:03 MDT 2016
testsuite: test suite duration: 0h 15m 3s

## ------------- ##
## Test results. ##
## ------------- ##

1731 tests were successful.
1 test was skipped.
